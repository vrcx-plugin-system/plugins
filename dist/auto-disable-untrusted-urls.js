(()=>{var c=Object.defineProperty;var u=(g,t)=>c(g,"name",{value:t,configurable:!0});const r=class r extends Plugin{constructor(){super({name:"\u{1F6E1}\uFE0F Auto Disable Untrusted URLs",description:"Automatically disables VRChat's untrusted URL feature for security (enables in private instances)",authors:[{name:"Bluscream"}],build:"1760847215",tags:["Security","Automation"],dependencies:[]}),this._lastGameRunning=!1}async load(){const t=window.customjs.SettingType;this.settings=this.defineSettings({triggerOnVRCXStart:{type:t.BOOLEAN,description:"Disable untrusted URLs when VRCX starts",default:!0},triggerOnGameStart:{type:t.BOOLEAN,description:"Disable untrusted URLs when VRChat starts",default:!0},triggerOnPublicInstance:{type:t.BOOLEAN,description:"Disable untrusted URLs when switching to public instance",default:!0},triggerOnPrivateInstance:{type:t.BOOLEAN,description:"Enable untrusted URLs when switching to private instance",default:!0}}),this.logger.log("Auto Disable Untrusted URLs plugin ready"),this.loaded=!0}async start(){this.settings.store.triggerOnVRCXStart&&await this.setUntrustedURLs(0,"VRCX_START"),this.setupGameStateMonitoring(),this.setupInstanceMonitoring(),this.enabled=!0,this.started=!0,this.logger.log("Auto Disable Untrusted URLs plugin started")}async stop(){this.logger.log("Stopping Auto Disable Untrusted URLs plugin"),await super.stop()}setupGameStateMonitoring(){this.settings.store.triggerOnGameStart&&this.subscribe("GAME",({isGameRunning:t})=>{t&&!this._lastGameRunning&&(this.logger.log("Game started detected"),this.setUntrustedURLs(0,"GAME_START")),this._lastGameRunning=t})}setupInstanceMonitoring(){!this.settings.store.triggerOnPublicInstance&&!this.settings.store.triggerOnPrivateInstance||this.subscribe("LOCATION",({location:t})=>{if(!t?.location)return;const e=this.getInstanceType(t.location);e==="public"&&this.settings.store.triggerOnPublicInstance?(this.logger.log("Switched to public instance"),this.setUntrustedURLs(0,"INSTANCE_SWITCH_PUBLIC")):e==="private"&&this.settings.store.triggerOnPrivateInstance&&(this.logger.log("Switched to private instance"),this.setUntrustedURLs(1,"INSTANCE_SWITCH_PRIVATE"))})}getInstanceType(t){if(!t)return"unknown";const e=t.match(/~(\w+)\(/);return e?e[1].toLowerCase():"public"}async setUntrustedURLs(t,e="MANUAL"){try{const s="VRC_ALLOW_UNTRUSTED_URL",n=t,a=await window.AppApi.GetVRChatRegistryKey(s);if(a===n)return;const o=n===0?"disabled":"enabled";this.logger.log(`[${e}] ${s}: ${a} \u2192 ${n} (${o})`),await window.AppApi.SetVRChatRegistryKey(s,n,3)}catch(s){this.logger.error("Error setting untrusted URLs:",s)}}};u(r,"AutoDisableUntrustedURLsPlugin");let i=r;window.customjs.__LAST_PLUGIN_CLASS__=i;})();
