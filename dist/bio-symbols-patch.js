(()=>{var g=Object.defineProperty;var s=(c,t)=>g(c,"name",{value:t,configurable:!0});const a=class a extends Plugin{constructor(){super({name:"\u{1F524} Bio Symbols Patch",description:"Patches replaceBioSymbols function to handle non-string inputs safely",authors:[{name:"Bluscream"}],tags:["Bugfix","Utility","Patch","Fix"],dependencies:[]}),this.originalFunction=null,this.originalUtils=null,this.patched=!1,this.patchedViaProxy=!1}async load(){this.logger.log("Bio Symbols Patch plugin loaded"),this.loaded=!0}async start(){this.patchReplaceBioSymbols(),this.enabled=!0,this.started=!0,this.logger.log("Bio Symbols Patch plugin started")}async stop(){this.logger.log("Stopping Bio Symbols Patch plugin"),this.patched&&this.originalFunction&&this.restoreOriginalFunction(),await super.stop()}patchReplaceBioSymbols(){try{if(window.utils?.replaceBioSymbols){this.logger.log("Found replaceBioSymbols in window.utils"),this.patchFunction(window.utils,"replaceBioSymbols");return}const t=window.$pinia?._s?.get?.("Utils");if(t?.replaceBioSymbols){this.logger.log("Found replaceBioSymbols in pinia Utils store"),this.patchFunction(t,"replaceBioSymbols");return}this.logger.log("replaceBioSymbols not found yet, will inject patched version"),this.injectPatchedFunction()}catch(t){this.logger.error(`Failed to patch replaceBioSymbols: ${t.message}`)}}patchFunction(t,e){try{this.originalFunction=t[e];const o=this.createPatchedFunction(this.originalFunction);try{t[e]=o,this.logger.log(`\u2713 Patched ${e} via direct assignment`)}catch{try{Object.defineProperty(t,e,{value:o,writable:!0,configurable:!0,enumerable:!0}),this.logger.log(`\u2713 Patched ${e} via defineProperty`)}catch{this.logger.log("Direct patching failed, using Proxy approach"),this.patchViaProxy(t,e,o);return}}this.patched=!0,this.logger.log(`\u2713 Successfully patched ${e}`),this.logger.showSuccess("Bio symbols patch applied")}catch(o){this.logger.error(`Failed to patch function: ${o.message}`)}}patchViaProxy(t,e,o){try{this.originalUtils=t;const i={get:(h,n)=>n===e?o:h[n]},r=new Proxy(t,i);window.utils=r,this.patched=!0,this.patchedViaProxy=!0,this.logger.log(`\u2713 Successfully patched ${e} via Proxy`),this.logger.showSuccess("Bio symbols patch applied (Proxy mode)")}catch(i){this.logger.error(`Failed to patch via Proxy: ${i.message}`)}}createPatchedFunction(t){const e=this;return s(function(i){try{if(i==null)return"";let r=i;return typeof i!="string"&&(typeof i=="object"?i.toString&&i.toString!==Object.prototype.toString?r=i.toString():r=JSON.stringify(i):r=String(i),e.logger.warn(`replaceBioSymbols received non-string input (${typeof i}), converted to string`)),t?t.call(this,r):e.replaceBioSymbolsFallback(r)}catch(r){return e.logger.error(`Error in patched replaceBioSymbols: ${r.message}`),String(i||"")}},"patchedReplaceBioSymbols")}replaceBioSymbolsFallback(t){if(!t||typeof t!="string")return"";const e={"@":"\uFF20","#":"\uFF03",$:"\uFF04","%":"\uFF05","&":"\uFF06","=":"\uFF1D","+":"\uFF0B","/":"\u2044","\\":"\uFF3C",";":";",":":"\u02F8",",":"\u201A","?":"\uFF1F","!":"\u01C3",'"':"\uFF02","<":"\u227A",">":"\u227B",".":"\u2024","^":"\uFF3E","{":"\uFF5B","}":"\uFF5D","[":"\uFF3B","]":"\uFF3D","(":"\uFF08",")":"\uFF09","|":"\uFF5C","*":"\u2217"};let o=t;for(const i in e){const r=new RegExp(e[i],"g");o=o.replace(r,i)}return o.replace(/ {1,}/g," ").trimRight()}injectPatchedFunction(){if(!window.utils){this.logger.warn("window.utils not available, cannot inject patch");return}window.utils.replaceBioSymbols=this.createPatchedFunction(null),this.patched=!0,this.logger.log("\u2713 Injected patched replaceBioSymbols into window.utils")}restoreOriginalFunction(){try{if(this.patchedViaProxy&&this.originalUtils)window.utils=this.originalUtils,this.logger.log("Restored original utils object (removed Proxy)"),this.patchedViaProxy=!1,this.originalUtils=null;else if(window.utils?.replaceBioSymbols&&this.originalFunction)try{window.utils.replaceBioSymbols=this.originalFunction,this.logger.log("Restored original replaceBioSymbols")}catch{this.logger.warn("Could not restore (read-only), but patch is removed")}this.patched=!1,this.originalFunction=null}catch(t){this.logger.error(`Failed to restore original function: ${t.message}`)}}isPatchApplied(){return this.patched}reapplyPatch(){this.patched&&(this.logger.log("Re-applying patch..."),this.restoreOriginalFunction()),this.patchReplaceBioSymbols()}};s(a,"BioSymbolsPatchPlugin");let l=a;window.customjs.__LAST_PLUGIN_CLASS__=l;})();
