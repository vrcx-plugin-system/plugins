(()=>{var d=Object.defineProperty;var c=(h,t)=>d(h,"name",{value:t,configurable:!0});const g=class g extends CustomModule{constructor(){super({name:"\u{1F511} Retry Auto Login",description:"Automatically retries login with saved credentials if logged out",authors:[{name:"Bluscream",description:"VRCX Plugin System Maintainer",userId:"usr_08082729-592d-4098-9a21-83c8dd37a844"}],tags:["Utility","Automation","Login"],dependencies:[]}),this.checkIntervalId=null}getActionButtons(){return[{label:"Retry Login Now",color:"primary",icon:"ri-login-circle-line",title:"Immediately retry login with saved credentials",callback:async()=>{await this.attemptAutoLogin()}}]}async load(){const t=window.customjs.types.SettingType;this.settings=this.defineSettings({autoRetryOnStartup:{type:t.BOOLEAN,description:"Retry login immediately on plugin startup if logged out",default:!0},autoRetryOnInterval:{type:t.BOOLEAN,description:"Periodically check and retry login if disconnected",default:!0},checkInterval:{type:t.TIMESPAN,description:"How often to check login status",default:3e4},retryDelay:{type:t.TIMESPAN,description:"Delay between retry attempts",default:5e3},maxRetries:{type:t.NUMBER,description:"Maximum retry attempts (0 = unlimited)",default:0},showNotifications:{type:t.BOOLEAN,description:"Show notifications on login attempts",default:!0}}),this.logger.log("Retry Auto Login plugin ready"),this.loaded=!0}async start(){this.settings.store.autoRetryOnStartup&&setTimeout(async()=>{await this.checkAndRetryLogin()},2e3),this.settings.store.autoRetryOnInterval&&this.startPeriodicCheck(),this.enabled=!0,this.started=!0,this.logger.log("Retry Auto Login plugin started")}async stop(){this.logger.log("Stopping Retry Auto Login plugin"),this.checkIntervalId&&(clearInterval(this.checkIntervalId),this.checkIntervalId=null),await super.stop()}startPeriodicCheck(){const t=this.settings.store.checkInterval||3e4;this.checkIntervalId=this.registerTimer(setInterval(async()=>{this.settings.store.autoRetryOnInterval&&await this.checkAndRetryLogin()},t)),this.logger.log(`Started periodic login check (interval: ${t}ms)`)}async checkAndRetryLogin(){try{const t=window.watchState;if(!t||t.isLoggedIn)return;this.logger.log("Not logged in, attempting auto login..."),await this.attemptAutoLogin()}catch(t){this.logger.error("Error in checkAndRetryLogin:",t)}}async attemptAutoLogin(){try{const t=window.$pinia?.auth,e=window.watchState;if(!t)return this.logger.error("Auth store not available"),this.settings.store.showNotifications&&this.logger.showError("Cannot retry login: Auth store not found"),!1;if(!e)return this.logger.error("watchState not available"),!1;if(e.isLoggedIn)return this.logger.log("Already logged in, no retry needed"),this.settings.store.showNotifications&&this.logger.showInfo("Already logged in"),!0;if(t.attemptingAutoLogin)return this.logger.log("Auto login already in progress"),!1;const r=t.loginForm?.savedCredentials||{},i=t.loginForm?.lastUserLoggedIn;if(!i)return this.logger.log("No last user saved, cannot auto login"),this.settings.store.showNotifications&&this.logger.showWarning("No saved login credentials found"),!1;const s=r[i];if(!s)return this.logger.log(`No credentials found for user: ${i}`),this.settings.store.showNotifications&&this.logger.showWarning("Saved credentials not found"),!1;const o=this.settings.store.maxRetries||0;if(o>0&&(t.autoLoginAttempts?.size||0)>=o)return this.logger.log(`Max retry attempts reached (${o})`),this.settings.store.showNotifications&&this.logger.showWarning(`Max login retry attempts reached (${o})`),!1;if(this.logger.log(`Attempting auto login for user: ${s.user?.displayName||i}`),this.settings.store.showNotifications&&this.logger.showInfo(`Retrying login as ${s.user?.displayName||"saved user"}...`),typeof t.relogin!="function")return this.logger.error("authStore.relogin function not found"),this.settings.store.showNotifications&&this.logger.showError("Login system not available"),!1;const n=this.settings.store.retryDelay||0;return n>0&&(this.logger.log(`Waiting ${n}ms before retry...`),await new Promise(l=>setTimeout(l,n))),t.attemptingAutoLogin=!0,await t.relogin(s),this.logger.log("Auto login request sent"),!0}catch(t){return this.logger.error("Error attempting auto login:",t),this.settings.store.showNotifications&&this.logger.showError(`Login retry failed: ${t.message}`),!1}}isLoggedIn(){return window.watchState?.isLoggedIn||!1}getSavedCredentialsInfo(){const t=window.$pinia?.auth,e=t?.loginForm?.savedCredentials||{},r=t?.loginForm?.lastUserLoggedIn||null;return{hasCredentials:Object.keys(e).length>0,lastUser:r,userCount:Object.keys(e).length}}};c(g,"RetryAutoLoginPlugin");let a=g;window.customjs.__LAST_PLUGIN_CLASS__=a;})();
