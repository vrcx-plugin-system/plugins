(()=>{var p=Object.defineProperty;var u=(d,r)=>p(d,"name",{value:r,configurable:!0});const c=class c extends CustomModule{constructor(){super({name:"Tag API \u{1F3F7}\uFE0F",description:"Provides custom tag API for users, worlds, and avatars",authors:[{name:"Bluscream",description:"VRCX Plugin System Maintainer",userId:"usr_08082729-592d-4098-9a21-83c8dd37a844"}],tags:["API","Enhancement"],required_dependencies:["dialog-events-api"]}),this.customWorldTags=new Map,this.customUserTags=new Map,this.customAvatarTags=new Map}async load(){this.registerEvent("world-tag-added",{description:"Fired when a custom world tag is added",payload:{worldId:"string - World ID",tag:"string - Tag text",color:"string - Tag color",timestamp:"number - Unix timestamp"},broadcastIPC:!1,logToConsole:!1}),this.registerEvent("user-tag-added",{description:"Fired when a custom user tag is added",payload:{userId:"string - User ID",tag:"string - Tag text",color:"string - Tag color",timestamp:"number - Unix timestamp"},broadcastIPC:!1,logToConsole:!1}),this.registerEvent("avatar-tag-added",{description:"Fired when a custom avatar tag is added",payload:{avatarId:"string - Avatar ID",tag:"string - Tag text",color:"string - Tag color",timestamp:"number - Unix timestamp"},broadcastIPC:!1,logToConsole:!1}),this.loaded=!0,this.logger.log("Tag API plugin loaded")}async start(){this.patchWorldStore(),this.patchUserStore(),this.patchAvatarStore(),this.setupWorldDialogWatcher(),this.setupUserDialogWatcher(),this.setupAvatarDialogWatcher(),this.enabled=!0,this.started=!0,this.logger.log("Tag API started")}patchWorldStore(){const r=window.$pinia?.world;if(!r){this.logger.warn("World store not available");return}const e=this;r.addCustomWorldTag=function(t){if(!t||!t.WorldId)return;const a=t.WorldId,l={tag:t.Tag||"",colour:t.TagColour||"#FF0000",url:t.Url||"",tooltip:t.Tooltip||"",timestamp:Date.now()},s=e.customWorldTags.get(a)||[];s.some(g=>g.tag===l.tag)||(s.push(l),e.customWorldTags.set(a,s),e.emit("world-tag-added",{worldId:a,tag:l.tag,color:l.colour,timestamp:Date.now()}))},r.getCustomWorldTags=function(t){return e.customWorldTags.get(t)||[]},r.removeCustomWorldTag=function(t,a){const l=e.customWorldTags.get(t);if(!l)return!1;const s=l.filter(o=>o.tag!==a);return s.length===0?e.customWorldTags.delete(t):e.customWorldTags.set(t,s),!0},r.getAllCustomWorldTags=function(){return Array.from(e.customWorldTags.entries()).map(([t,a])=>({worldId:t,tags:a}))},this.logger.log("World store patched with custom tag support")}patchUserStore(){const r=window.$pinia?.user;if(!r){this.logger.warn("User store not available");return}const e=this;r.addCustomUserTag=function(t){if(!t||!t.UserId)return;const a=t.UserId,l={tag:t.Tag||"",colour:t.TagColour||"#FF00C6",url:t.Url||"",tooltip:t.Tooltip||"",timestamp:Date.now()},s=e.customUserTags.get(a)||[];s.some(g=>g.tag===l.tag)||(s.push(l),e.customUserTags.set(a,s),e.emit("user-tag-added",{userId:a,tag:l.tag,color:l.colour,timestamp:Date.now()}))},r.getCustomUserTags=function(t){return e.customUserTags.get(t)||[]},r.removeCustomUserTag=function(t,a){const l=e.customUserTags.get(t);if(!l)return!1;const s=l.filter(o=>o.tag!==a);return s.length===0?e.customUserTags.delete(t):e.customUserTags.set(t,s),!0},r.getAllCustomUserTags=function(){return Array.from(e.customUserTags.entries()).map(([t,a])=>({userId:t,tags:a}))},this.logger.log("User store patched with custom tag support")}setupWorldDialogWatcher(){this.on("ShowWorldDialog",r=>{r?.worldId&&setTimeout(()=>this.injectCustomWorldTag(r.worldId),100)}),this.logger.log("World dialog watcher setup")}patchAvatarStore(){const r=window.$pinia?.avatar;if(!r){this.logger.warn("Avatar store not available");return}const e=this;r.addCustomAvatarTag=function(t){if(!t||!t.AvatarId)return;const a=t.AvatarId,l={tag:t.Tag||"",colour:t.TagColour||"#00C6FF",url:t.Url||"",tooltip:t.Tooltip||"",timestamp:Date.now()},s=e.customAvatarTags.get(a)||[];s.some(g=>g.tag===l.tag)||(s.push(l),e.customAvatarTags.set(a,s),e.emit("avatar-tag-added",{avatarId:a,tag:l.tag,color:l.colour,timestamp:Date.now()}))},r.getCustomAvatarTags=function(t){return e.customAvatarTags.get(t)||[]},r.removeCustomAvatarTag=function(t,a){const l=e.customAvatarTags.get(t);if(!l)return!1;const s=l.filter(o=>o.tag!==a);return s.length===0?e.customAvatarTags.delete(t):e.customAvatarTags.set(t,s),!0},r.getAllCustomAvatarTags=function(){return Array.from(e.customAvatarTags.entries()).map(([t,a])=>({avatarId:t,tags:a}))},this.logger.log("Avatar store patched with custom tag support")}setupUserDialogWatcher(){this.on("ShowUserDialog",r=>{r?.userId&&setTimeout(()=>this.injectCustomUserTags(r.userId),100)}),this.logger.log("User dialog watcher setup")}setupAvatarDialogWatcher(){this.on("ShowAvatarDialog",r=>{r?.avatarId&&setTimeout(()=>this.injectCustomAvatarTags(r.avatarId),100)}),this.logger.log("Avatar dialog watcher setup")}injectCustomWorldTag(r){const e=document.querySelector(".x-world-dialog");if(!e)return;let t=null;const a=Array.from(e.querySelectorAll(".el-tag"));for(const o of a){const g=o.textContent||"";if(g.includes("Public")||g.includes("Private")||g.includes("PC")||g.includes("Quest")){t=o.parentElement;break}}if(!t)return;t.querySelectorAll(".vrcx-custom-world-tag").forEach(o=>o.remove());const s=this.customWorldTags.get(r);if(!(!s||s.length===0))for(const o of s){const g=document.createElement("span");g.className="el-tag el-tag--danger el-tag--plain el-tag--small vrcx-custom-world-tag",g.style.marginRight="5px",g.style.marginTop="5px",g.style.color=o.colour,g.style.borderColor=o.colour,g.textContent=o.tag,o.tooltip&&(g.title=o.tooltip),o.url&&(g.style.cursor="pointer",g.addEventListener("click",i=>{i.stopPropagation(),window.open(o.url,"_blank")})),t.appendChild(g)}}injectCustomUserTags(r){const e=document.querySelector(".x-user-dialog");if(!e)return;const t=Array.from(e.querySelectorAll('div[style*="margin-top: 5px"]'));let a=null;for(const g of t)if(g.querySelector(".el-tag")){a=g;break}if(!a)return;a.querySelectorAll(".vrcx-custom-user-tag").forEach(g=>g.remove());const s=this.customUserTags.get(r);if(!s||s.length===0)return;const o=a.querySelector("br");for(const g of s){const i=document.createElement("span");i.className="el-tag el-tag--info el-tag--plain el-tag--small vrcx-custom-user-tag",i.style.marginRight="5px",i.style.marginTop="5px",i.style.color=g.colour,i.style.borderColor=g.colour,i.textContent=g.tag,g.tooltip&&(i.title=g.tooltip),g.url&&(i.style.cursor="pointer",i.addEventListener("click",m=>{m.stopPropagation(),window.open(g.url,"_blank")})),o?a.insertBefore(i,o):a.appendChild(i)}}injectCustomAvatarTags(r){const e=document.querySelector(".x-avatar-dialog");if(!e)return;const t=e.querySelector(".el-dialog__body > div > div:nth-child(2)");if(!t)return;t.querySelectorAll(".vrcx-custom-avatar-tag").forEach(s=>s.remove());const l=this.customAvatarTags.get(r);if(!(!l||l.length===0))for(const s of l){const o=document.createElement("span");o.className="el-tag el-tag--success el-tag--plain el-tag--small vrcx-custom-avatar-tag",o.style.marginRight="5px",o.style.marginTop="5px",o.style.color=s.colour,o.style.borderColor=s.colour,o.textContent=s.tag,s.tooltip&&(o.title=s.tooltip),s.url&&(o.style.cursor="pointer",o.addEventListener("click",g=>{g.stopPropagation(),window.open(s.url,"_blank")})),t.appendChild(o)}}addWorldTag(r,e,t="#FF0000",a="",l=""){const s=window.$pinia?.world;if(!s||!s.addCustomWorldTag)return this.logger.error("World store not available or not patched"),!1;try{return s.addCustomWorldTag({WorldId:r,Tag:e,TagColour:t,Url:a,Tooltip:l}),!0}catch(o){const g=o instanceof Error?o.message:String(o);return this.logger.error(`Failed to add world tag: ${g}`),!1}}getWorldTags(r){return this.customWorldTags.get(r)||[]}removeWorldTag(r,e){const t=this.customWorldTags.get(r);if(!t)return!1;const a=t.filter(l=>l.tag!==e);return a.length===0?this.customWorldTags.delete(r):this.customWorldTags.set(r,a),!0}removeAllWorldTags(r){return this.customWorldTags.delete(r)}getAllWorldTags(){return Array.from(this.customWorldTags.entries()).map(([r,e])=>({worldId:r,tags:e.map(t=>({tag:t.tag,colour:t.colour,timestamp:t.timestamp}))}))}clearAllWorldTags(){this.customWorldTags.clear(),this.logger.log("All custom world tags cleared")}addUserTag(r,e,t="#FF00C6",a="",l=""){const s=window.$pinia?.user;if(!s||!s.addCustomUserTag)return this.logger.error("User store not available or not patched"),!1;try{return s.addCustomUserTag({UserId:r,Tag:e,TagColour:t,Url:a,Tooltip:l}),!0}catch(o){const g=o instanceof Error?o.message:String(o);return this.logger.error(`Failed to add user tag: ${g}`),!1}}getUserTags(r){return this.customUserTags.get(r)||[]}removeUserTag(r,e){const t=this.customUserTags.get(r);if(!t)return!1;const a=t.filter(l=>l.tag!==e);return a.length===0?this.customUserTags.delete(r):this.customUserTags.set(r,a),!0}removeAllUserTags(r){return this.customUserTags.delete(r)}getAllUserTags(){return Array.from(this.customUserTags.entries()).map(([r,e])=>({userId:r,tags:e.map(t=>({tag:t.tag,colour:t.colour,timestamp:t.timestamp}))}))}clearAllUserTags(){this.customUserTags.clear(),this.logger.log("All custom user tags cleared")}addAvatarTag(r,e,t="#00C6FF",a="",l=""){const s=window.$pinia?.avatar;if(!s||!s.addCustomAvatarTag)return this.logger.error("Avatar store not available or not patched"),!1;try{return s.addCustomAvatarTag({AvatarId:r,Tag:e,TagColour:t,Url:a,Tooltip:l}),!0}catch(o){const g=o instanceof Error?o.message:String(o);return this.logger.error(`Failed to add avatar tag: ${g}`),!1}}getAvatarTags(r){return this.customAvatarTags.get(r)||[]}removeAvatarTag(r,e){const t=this.customAvatarTags.get(r);if(!t)return!1;const a=t.filter(l=>l.tag!==e);return a.length===0?this.customAvatarTags.delete(r):this.customAvatarTags.set(r,a),!0}removeAllAvatarTags(r){return this.customAvatarTags.delete(r)}getAllAvatarTags(){return Array.from(this.customAvatarTags.entries()).map(([r,e])=>({avatarId:r,tags:e.map(t=>({tag:t.tag,colour:t.colour,timestamp:t.timestamp}))}))}clearAllAvatarTags(){this.customAvatarTags.clear(),this.logger.log("All custom avatar tags cleared")}async stop(){await super.stop(),this.logger.log("Tag API stopped")}};u(c,"TagAPIPlugin");let n=c;window.customjs.__LAST_PLUGIN_CLASS__=n;})();
