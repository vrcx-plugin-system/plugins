(()=>{var d=Object.defineProperty;var c=(u,s)=>d(u,"name",{value:s,configurable:!0});const l=class l extends CustomModule{constructor(){super({name:"Tag API \u{1F3F7}\uFE0F",description:"Provides custom tag API for users, worlds, and avatars",authors:[{name:"Bluscream",description:"VRCX Plugin System Maintainer",userId:"usr_08082729-592d-4098-9a21-83c8dd37a844"}],tags:["API","Enhancement"],required_dependencies:["dialog-events-api"]}),this.customWorldTags=new Map,this.customUserTags=new Map,this.customAvatarTags=new Map}async load(){this.registerEvent("world-tag-added",{description:"Fired when a custom world tag is added",payload:{worldId:"string - World ID",tag:"string - Tag text",color:"string - Tag color",timestamp:"number - Unix timestamp"},broadcastIPC:!1,logToConsole:!1}),this.registerEvent("user-tag-added",{description:"Fired when a custom user tag is added",payload:{userId:"string - User ID",tag:"string - Tag text",color:"string - Tag color",timestamp:"number - Unix timestamp"},broadcastIPC:!1,logToConsole:!1}),this.registerEvent("avatar-tag-added",{description:"Fired when a custom avatar tag is added",payload:{avatarId:"string - Avatar ID",tag:"string - Tag text",color:"string - Tag color",timestamp:"number - Unix timestamp"},broadcastIPC:!1,logToConsole:!1}),this.loaded=!0,this.logger.log("Tag API plugin loaded")}async start(){this.patchWorldStore(),this.patchUserStore(),this.patchAvatarStore(),this.setupWorldDialogWatcher(),this.setupUserDialogWatcher(),this.setupAvatarDialogWatcher(),this.enabled=!0,this.started=!0,this.logger.log("Tag API started")}patchWorldStore(){const s=window.$pinia?.world;if(!s){this.logger.warn("World store not available");return}const r=this;s.addCustomWorldTag=function(t){if(!t||!t.WorldId)return;const e=t.WorldId,a={tag:t.Tag||"",colour:t.TagColour||"#FF0000",url:t.Url||"",tooltip:t.Tooltip||"",timestamp:Date.now()},o=r.customWorldTags.get(e)||[];o.some(i=>i.tag===a.tag)||(o.push(a),r.customWorldTags.set(e,o),r.emit("world-tag-added",{worldId:e,tag:a.tag,color:a.colour,timestamp:Date.now()}))},s.getCustomWorldTags=function(t){return r.customWorldTags.get(t)||[]},s.removeCustomWorldTag=function(t,e){const a=r.customWorldTags.get(t);if(!a)return!1;const o=a.filter(g=>g.tag!==e);return o.length===0?r.customWorldTags.delete(t):r.customWorldTags.set(t,o),!0},s.getAllCustomWorldTags=function(){return Array.from(r.customWorldTags.entries()).map(([t,e])=>({worldId:t,tags:e}))},this.logger.log("World store patched with custom tag support")}patchUserStore(){const s=window.$pinia?.user;if(!s){this.logger.warn("User store not available");return}const r=this;s.addCustomUserTag=function(t){if(!t||!t.UserId)return;const e=t.UserId,a={tag:t.Tag||"",colour:t.TagColour||"#FF00C6",url:t.Url||"",tooltip:t.Tooltip||"",timestamp:Date.now()},o=r.customUserTags.get(e)||[];o.some(i=>i.tag===a.tag)||(o.push(a),r.customUserTags.set(e,o),r.emit("user-tag-added",{userId:e,tag:a.tag,color:a.colour,timestamp:Date.now()}))},s.getCustomUserTags=function(t){return r.customUserTags.get(t)||[]},s.removeCustomUserTag=function(t,e){const a=r.customUserTags.get(t);if(!a)return!1;const o=a.filter(g=>g.tag!==e);return o.length===0?r.customUserTags.delete(t):r.customUserTags.set(t,o),!0},s.getAllCustomUserTags=function(){return Array.from(r.customUserTags.entries()).map(([t,e])=>({userId:t,tags:e}))},this.logger.log("User store patched with custom tag support")}setupWorldDialogWatcher(){this.on("ShowWorldDialog",s=>{s?.worldId&&setTimeout(()=>this.injectCustomWorldTag(s.worldId),100)}),this.logger.log("World dialog watcher setup")}patchAvatarStore(){const s=window.$pinia?.avatar;if(!s){this.logger.warn("Avatar store not available");return}const r=this;s.addCustomAvatarTag=function(t){if(!t||!t.AvatarId)return;const e=t.AvatarId,a={tag:t.Tag||"",colour:t.TagColour||"#00C6FF",timestamp:Date.now()},o=r.customAvatarTags.get(e)||[];o.some(i=>i.tag===a.tag)||(o.push(a),r.customAvatarTags.set(e,o),r.emit("avatar-tag-added",{avatarId:e,tag:a.tag,color:a.colour,timestamp:Date.now()}))},s.getCustomAvatarTags=function(t){return r.customAvatarTags.get(t)||[]},s.removeCustomAvatarTag=function(t,e){const a=r.customAvatarTags.get(t);if(!a)return!1;const o=a.filter(g=>g.tag!==e);return o.length===0?r.customAvatarTags.delete(t):r.customAvatarTags.set(t,o),!0},s.getAllCustomAvatarTags=function(){return Array.from(r.customAvatarTags.entries()).map(([t,e])=>({avatarId:t,tags:e}))},this.logger.log("Avatar store patched with custom tag support")}setupUserDialogWatcher(){this.on("ShowUserDialog",s=>{s?.userId&&setTimeout(()=>this.injectCustomUserTags(s.userId),100)}),this.logger.log("User dialog watcher setup")}setupAvatarDialogWatcher(){this.on("ShowAvatarDialog",s=>{s?.avatarId&&setTimeout(()=>this.injectCustomAvatarTags(s.avatarId),100)}),this.logger.log("Avatar dialog watcher setup")}injectCustomWorldTag(s){const r=this.customWorldTags.get(s);if(!r||r.length===0)return;const t=document.querySelectorAll(".el-dialog__body > div > div > div");if(t.length<2)return;const e=t[1];e.querySelectorAll(".vrcx-custom-world-tag").forEach(o=>o.remove());for(const o of r){const g=document.createElement("span");g.className="el-tag el-tag--danger el-tag--plain el-tag--small vrcx-custom-world-tag",g.style.marginRight="5px",g.style.marginTop="5px",g.style.color=o.colour,g.style.borderColor=o.colour,g.textContent=o.tag,e.firstChild?e.insertBefore(g,e.firstChild):e.appendChild(g)}}injectCustomUserTags(s){const r=this.customUserTags.get(s);if(!r||r.length===0)return;const t=document.querySelectorAll(".el-dialog__body > div > div");if(t.length<2)return;const e=t[1];e.querySelectorAll(".vrcx-custom-user-tag").forEach(o=>o.remove());for(const o of r){const g=document.createElement("span");g.className="el-tag el-tag--info el-tag--plain el-tag--small vrcx-custom-user-tag",g.style.marginRight="5px",g.style.marginTop="5px",g.style.color=o.colour,g.style.borderColor=o.colour,g.textContent=o.tag,e.appendChild(g)}}injectCustomAvatarTags(s){const r=this.customAvatarTags.get(s);if(!r||r.length===0)return;const t=document.querySelectorAll(".el-dialog__body > div > div");if(t.length<2)return;const e=t[1];e.querySelectorAll(".vrcx-custom-avatar-tag").forEach(o=>o.remove());for(const o of r){const g=document.createElement("span");g.className="el-tag el-tag--success el-tag--plain el-tag--small vrcx-custom-avatar-tag",g.style.marginRight="5px",g.style.marginTop="5px",g.style.color=o.colour,g.style.borderColor=o.colour,g.textContent=o.tag,e.appendChild(g)}}addWorldTag(s,r,t="#FF0000"){const e=window.$pinia?.world;if(!e||!e.addCustomWorldTag)return this.logger.error("World store not available or not patched"),!1;try{return e.addCustomWorldTag({WorldId:s,Tag:r,TagColour:t}),!0}catch(a){const o=a instanceof Error?a.message:String(a);return this.logger.error(`Failed to add world tag: ${o}`),!1}}getWorldTags(s){return this.customWorldTags.get(s)||[]}removeWorldTag(s,r){const t=this.customWorldTags.get(s);if(!t)return!1;const e=t.filter(a=>a.tag!==r);return e.length===0?this.customWorldTags.delete(s):this.customWorldTags.set(s,e),!0}removeAllWorldTags(s){return this.customWorldTags.delete(s)}getAllWorldTags(){return Array.from(this.customWorldTags.entries()).map(([s,r])=>({worldId:s,tags:r.map(t=>({tag:t.tag,colour:t.colour,timestamp:t.timestamp}))}))}clearAllWorldTags(){this.customWorldTags.clear(),this.logger.log("All custom world tags cleared")}addUserTag(s,r,t="#FF00C6"){const e=window.$pinia?.user;if(!e||!e.addCustomUserTag)return this.logger.error("User store not available or not patched"),!1;try{return e.addCustomUserTag({UserId:s,Tag:r,TagColour:t}),!0}catch(a){const o=a instanceof Error?a.message:String(a);return this.logger.error(`Failed to add user tag: ${o}`),!1}}getUserTags(s){return this.customUserTags.get(s)||[]}removeUserTag(s,r){const t=this.customUserTags.get(s);if(!t)return!1;const e=t.filter(a=>a.tag!==r);return e.length===0?this.customUserTags.delete(s):this.customUserTags.set(s,e),!0}removeAllUserTags(s){return this.customUserTags.delete(s)}getAllUserTags(){return Array.from(this.customUserTags.entries()).map(([s,r])=>({userId:s,tags:r.map(t=>({tag:t.tag,colour:t.colour,timestamp:t.timestamp}))}))}clearAllUserTags(){this.customUserTags.clear(),this.logger.log("All custom user tags cleared")}addAvatarTag(s,r,t="#00C6FF"){const e=window.$pinia?.avatar;if(!e||!e.addCustomAvatarTag)return this.logger.error("Avatar store not available or not patched"),!1;try{return e.addCustomAvatarTag({AvatarId:s,Tag:r,TagColour:t}),!0}catch(a){const o=a instanceof Error?a.message:String(a);return this.logger.error(`Failed to add avatar tag: ${o}`),!1}}getAvatarTags(s){return this.customAvatarTags.get(s)||[]}removeAvatarTag(s,r){const t=this.customAvatarTags.get(s);if(!t)return!1;const e=t.filter(a=>a.tag!==r);return e.length===0?this.customAvatarTags.delete(s):this.customAvatarTags.set(s,e),!0}removeAllAvatarTags(s){return this.customAvatarTags.delete(s)}getAllAvatarTags(){return Array.from(this.customAvatarTags.entries()).map(([s,r])=>({avatarId:s,tags:r.map(t=>({tag:t.tag,colour:t.colour,timestamp:t.timestamp}))}))}clearAllAvatarTags(){this.customAvatarTags.clear(),this.logger.log("All custom avatar tags cleared")}async stop(){await super.stop(),this.logger.log("Tag API stopped")}};c(l,"TagAPIPlugin");let n=l;window.customjs.__LAST_PLUGIN_CLASS__=n;})();
