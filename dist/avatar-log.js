(()=>{var g=Object.defineProperty;var v=(u,t)=>g(u,"name",{value:t,configurable:!0});const c=class c extends Plugin{constructor(){super({name:"\u{1F4F8} Avatar Logger",description:"Logs and submits avatar IDs to various avatar database providers (avtrDB, NSVR, PAW, VRCDB, VRCWB)",authors:[{name:"Bluscream"}],build:"1760847215",tags:["Logger","Database","Integration"],dependencies:[]}),this.processedAvatars=new Set,this.pendingQueue=new Set,this.isProcessing=!1,this.rateLimits={avtrdb:{lastRequest:0,minInterval:1e3},nsvr:{lastRequest:0,minInterval:1e3},paw:{lastRequest:0,minInterval:1e3},vrcdb:{lastRequest:0,minInterval:1e3},vrcwb:{lastRequest:0,minInterval:1e3}},this.stats={totalProcessed:0,totalSent:0,totalUnique:0,byProvider:{avtrdb:{sent:0,unique:0,errors:0},nsvr:{sent:0,unique:0,errors:0},paw:{sent:0,unique:0,errors:0},vrcdb:{sent:0,unique:0,errors:0},vrcwb:{sent:0,unique:0,errors:0}}},this.logger.log("\u{1F3AD} Avatar Logger initialized")}getActionButtons(){return[{label:"Scan Stores",color:"primary",icon:"ri-search-line",title:"Manually scan avatar stores for new avatars",callback:async()=>{this.logger.showInfo("Scanning avatar stores..."),await this.manualScan()}},{label:"Clear Cache",color:"danger",icon:"ri-delete-bin-line",title:"Clear all processed avatars and reset stats",callback:async()=>{confirm(`Clear all processed avatars and reset stats?

This cannot be undone!`)&&(this.clearProcessedAvatars(),this.logger.showSuccess("Cache cleared successfully!"))}}]}async load(){this.logger.log("\u{1F4E6} Loading Avatar Logger..."),this.categories=this.defineSettingsCategories({general:{name:"\u{1F4F8} General Settings",description:"Basic plugin configuration"},providers:{name:"\u{1F4F8} Avatar Database Providers",description:"Enable or disable specific avatar databases"},performance:{name:"\u{1F4F8} Performance & Processing",description:"Control how avatars are processed and submitted"}}),this.settings=this.defineSettings({attribution:{type:SettingType.STRING,description:"Your Discord User ID for attribution (leave empty for anonymous)",category:"general",default:"",placeholder:"Discord User ID"},logToConsole:{type:SettingType.BOOLEAN,description:"Log avatar processing to browser console",category:"general",default:!0},scanOnStartup:{type:SettingType.BOOLEAN,description:"Scan avatar stores on login",category:"general",default:!0},enableAvtrDB:{type:SettingType.BOOLEAN,description:"avtrDB - Avatar Search (api.avtrdb.com)",category:"providers",default:!0},enableNSVR:{type:SettingType.BOOLEAN,description:"NSVR - NekoSune Community (avtr.nekosunevr.co.uk)",category:"providers",default:!1},enablePAW:{type:SettingType.BOOLEAN,description:"PAW - Puppy's Avatar World (paw-api.amelia.fun)",category:"providers",default:!1},enableVRCDB:{type:SettingType.BOOLEAN,description:"VRCDB - Avatar Search (search.bs002.de)",category:"providers",default:!1},enableVRCWB:{type:SettingType.BOOLEAN,description:"VRCWB - World Balancer (avatar.worldbalancer.com)",category:"providers",default:!1},batchSize:{type:SettingType.NUMBER,description:"Number of avatars to process simultaneously",category:"performance",default:5},queueDelay:{type:SettingType.NUMBER,description:"Delay between processing batches (milliseconds)",category:"performance",default:2e3},retryAttempts:{type:SettingType.NUMBER,description:"Number of retry attempts for failed requests",category:"performance",default:3}});const t=[this.settings.store.enableAvtrDB&&"avtrDB",this.settings.store.enableNSVR&&"NSVR",this.settings.store.enablePAW&&"PAW",this.settings.store.enableVRCDB&&"VRCDB",this.settings.store.enableVRCWB&&"VRCWB"].filter(Boolean);this.logger.log(`\u2699\uFE0F Enabled providers: ${t.join(", ")}`),this.loadProcessedAvatars(),this.loaded=!0,this.logger.log("\u2705 Avatar Logger loaded")}async start(){this.logger.log("\u{1F680} Starting Avatar Logger..."),this.hookAvatarEvents(),this.started=!0,this.logger.log("\u2705 Avatar Logger started and monitoring")}async onLogin(){this.settings.store.scanOnStartup&&(this.logger.log("\u{1F464} User logged in, scanning avatar stores..."),setTimeout(()=>{this.scanAvatarStores()},5e3))}async stop(){this.logger.log("\u{1F6D1} Stopping Avatar Logger..."),this.saveProcessedAvatars()}hookAvatarEvents(){try{this.registerPostHook("$pinia.gameLog.addGameLog",(t,r)=>{const s=r[0];s?.type==="AvatarChange"&&s.avatarId&&this.processAvatarId(s.avatarId,"AvatarChange Event")}),this.registerPostHook("$pinia.avatar.showAvatarDialog",(t,r)=>{const s=r[0];s&&this.processAvatarId(s,"showAvatarDialog")}),this.registerPostHook("$pinia.avatar.addAvatarToHistory",(t,r)=>{const s=r[0];s&&this.processAvatarId(s,"addAvatarToHistory")}),this.registerPostHook("$pinia.avatar.applyAvatar",(t,r)=>{const s=r[0];s?.id&&this.processAvatarId(s.id,"applyAvatar")}),this.registerPreHook("$pinia.avatar.addAvatarWearTime",t=>{const r=t[0];r&&this.processAvatarId(r,"addAvatarWearTime")}),this.logger.log("\u2705 Avatar event hooks registered")}catch(t){this.logger.error("Failed to register avatar hooks:",t)}}processAvatarId(t,r="unknown"){!t||typeof t!="string"||t.match(/^avtr_[0-9A-Fa-f]{8}-([0-9A-Fa-f]{4}-){3}[0-9A-Fa-f]{12}$/)&&(this.processedAvatars.has(t)||(this.settings.store.logToConsole&&this.logger.log(`\u{1F4CB} Queuing avatar: ${t} (from: ${r})`),this.pendingQueue.add(t),this.processedAvatars.add(t),this.stats.totalProcessed++,this.processQueue()))}async processQueue(){if(!(this.isProcessing||this.pendingQueue.size===0)){this.isProcessing=!0;try{const t=this.settings.store.batchSize,r=Array.from(this.pendingQueue).slice(0,t),s=r.map(e=>this.sendToProviders(e));if(await Promise.allSettled(s),r.forEach(e=>this.pendingQueue.delete(e)),this.pendingQueue.size>0){const e=this.settings.store.queueDelay;setTimeout(()=>{this.isProcessing=!1,this.processQueue()},e)}else this.isProcessing=!1,this.saveProcessedAvatars()}catch(t){this.logger.error("Error processing queue:",t),this.isProcessing=!1}}}async sendToProviders(t){const s=this.settings.store.attribution||"1007655277732651069",e={avatarId:t,providers:{}};return this.settings.store.enableAvtrDB&&(e.providers.avtrdb=await this.sendToAvtrDB(t,s)),this.settings.store.enableNSVR&&(e.providers.nsvr=await this.sendToNSVR(t,s)),this.settings.store.enablePAW&&(e.providers.paw=await this.sendToPAW(t)),this.settings.store.enableVRCDB&&(e.providers.vrcdb=await this.sendToVRCDB(t,s)),this.settings.store.enableVRCWB&&(e.providers.vrcwb=await this.sendToVRCWB(t,s)),this.settings.store.logToConsole&&this.logger.log(`\u2705 Processed ${t}:`,e.providers),e}async sendToAvtrDB(t,r){const s="avtrdb";await this.waitForRateLimit(s);try{const e=await fetch("https://api.avtrdb.com/v2/avatar/ingest",{method:"POST",headers:{"Content-Type":"application/json","User-Agent":"VRCX-AvatarLog/1.0"},body:JSON.stringify({avatar_ids:[t],attribution:r})}),a=await e.json();return this.stats.byProvider[s].sent++,e.ok&&a.valid_avatar_ids===1?(this.stats.byProvider[s].unique++,this.stats.totalUnique++,{success:!0,unique:!0,provider:"avtrDB"}):{success:!0,unique:!1,provider:"avtrDB"}}catch(e){return this.stats.byProvider[s].errors++,this.logger.error(`avtrDB error for ${t}:`,e),{success:!1,error:e.message,provider:"avtrDB"}}}async sendToNSVR(t,r){const s="nsvr";await this.waitForRateLimit(s);try{const e=await fetch("https://avtr.nekosunevr.co.uk/v1/vrchat/avatars/store/putavatarExternal",{method:"POST",headers:{"Content-Type":"application/json","User-Agent":"VRCX-AvatarLog/1.0"},body:JSON.stringify({id:t,userid:r})});this.stats.byProvider[s].sent++;const a=e.status===404;return a&&(this.stats.byProvider[s].unique++,this.stats.totalUnique++),e.ok||e.status===404?{success:!0,unique:a,provider:"NSVR"}:{success:!1,status:e.status,provider:"NSVR"}}catch(e){return this.logger.warn(`NSVR error for ${t}:`,e),{success:!1,error:e.message,provider:"NSVR"}}}async sendToPAW(t){const r="paw";await this.waitForRateLimit(r);try{const s=await fetch(`https://paw-api.amelia.fun/update?avatarId=${t}`,{method:"POST",headers:{"User-Agent":"VRCX-AvatarLog/1.0"}}),e=await s.json();this.stats.byProvider[r].sent++;const a=!e.avatar||e.avatar===null||Array.isArray(e.avatar)&&e.avatar.length===0;return a&&(this.stats.byProvider[r].unique++,this.stats.totalUnique++),s.ok?{success:!0,unique:a,provider:"PAW"}:{success:!1,status:s.status,provider:"PAW"}}catch(s){return this.stats.byProvider[r].errors++,this.logger.error(`PAW error for ${t}:`,s),{success:!1,error:s.message,provider:"PAW"}}}async sendToVRCDB(t,r){const s="vrcdb";await this.waitForRateLimit(s);try{const e=await fetch("https://search.bs002.de/api/Avatar/putavatar",{method:"PUT",headers:{"Content-Type":"application/json","User-Agent":"VRCX-AvatarLog/1.0"},body:JSON.stringify({id:t,userid:r})});this.stats.byProvider[s].sent++;const a=e.status===404;return a&&(this.stats.byProvider[s].unique++,this.stats.totalUnique++),e.ok||e.status===404||e.status===500?{success:!0,unique:a,provider:"VRCDB"}:{success:!1,status:e.status,provider:"VRCDB"}}catch(e){return this.stats.byProvider[s].errors++,this.logger.error(`VRCDB error for ${t}:`,e),{success:!1,error:e.message,provider:"VRCDB"}}}async sendToVRCWB(t,r){const s="vrcwb";await this.waitForRateLimit(s);try{const e=await fetch("https://avatar.worldbalancer.com/v1/vrchat/avatars/store/putavatarExternal",{method:"POST",headers:{"Content-Type":"application/json","User-Agent":"VRCX-AvatarLog/1.0"},body:JSON.stringify({id:t,userid:r})});this.stats.byProvider[s].sent++;const a=e.status===404;return a&&(this.stats.byProvider[s].unique++,this.stats.totalUnique++),e.ok||e.status===404?{success:!0,unique:a,provider:"VRCWB"}:{success:!1,status:e.status,provider:"VRCWB"}}catch(e){return this.stats.byProvider[s].errors++,this.logger.error(`VRCWB error for ${t}:`,e),{success:!1,error:e.message,provider:"VRCWB"}}}async waitForRateLimit(t){const r=this.rateLimits[t],e=Date.now()-r.lastRequest;if(e<r.minInterval){const a=r.minInterval-e;await new Promise(o=>setTimeout(o,a))}this.rateLimits[t].lastRequest=Date.now()}async scanAvatarStores(){this.logger.log("\u{1F50D} Scanning avatar stores...");try{const t=window.$pinia?.avatar;if(!t){this.logger.warn("Avatar store not available");return}let r=0;const s=t.cachedAvatars?.value||t.cachedAvatars;if(s&&s instanceof Map)for(const[o]of s)this.processAvatarId(o,"Store Scan - Cached"),r++;const e=t.avatarHistory?.value||t.avatarHistory;if(e){const o=e instanceof Set||Array.isArray(e)?e:[];for(const i of o)this.processAvatarId(i,"Store Scan - History"),r++}const a=window.$pinia?.favorite;if(a?.localAvatarFavoritesList){const o=a.localAvatarFavoritesList.value||a.localAvatarFavoritesList;if(Array.isArray(o))for(const i of o)i&&(this.processAvatarId(i,"Store Scan - Favorites List"),r++)}if(a?.localAvatarFavorites){const o=a.localAvatarFavorites.value||a.localAvatarFavorites;if(o&&typeof o=="object")for(const i in o){const l=o[i];if(Array.isArray(l))for(const d of l)d?.id&&(this.processAvatarId(d.id,"Store Scan - Favorites"),r++)}}this.logger.log(`\u2705 Store scan complete - found ${r} avatars`)}catch(t){this.logger.error("Error scanning stores:",t)}}loadProcessedAvatars(){try{const t=localStorage.getItem("avatarlog_processed");if(t){const r=JSON.parse(t);this.processedAvatars=new Set(r.avatars||[]),this.stats=r.stats||this.stats,this.logger.log(`\u{1F4C2} Loaded ${this.processedAvatars.size} processed avatars`)}}catch(t){this.logger.error("Error loading processed avatars:",t)}}saveProcessedAvatars(){try{const t={avatars:Array.from(this.processedAvatars),stats:this.stats,lastSaved:new Date().toISOString()};localStorage.setItem("avatarlog_processed",JSON.stringify(t))}catch(t){this.logger.error("Error saving processed avatars:",t)}}getStats(){return{...this.stats,processedAvatars:this.processedAvatars.size,pendingQueue:this.pendingQueue.size}}clearProcessedAvatars(){this.processedAvatars.clear(),this.pendingQueue.clear(),this.stats={totalProcessed:0,totalSent:0,totalUnique:0,byProvider:{avtrdb:{sent:0,unique:0,errors:0},nsvr:{sent:0,unique:0,errors:0},paw:{sent:0,unique:0,errors:0},vrcdb:{sent:0,unique:0,errors:0},vrcwb:{sent:0,unique:0,errors:0}}},localStorage.removeItem("avatarlog_processed"),this.logger.log("\u{1F5D1}\uFE0F Cleared all processed avatars!")}manualScan(){this.scanAvatarStores()}};v(c,"AvatarLogPlugin");let n=c;window.customjs.__LAST_PLUGIN_CLASS__=n;})();
