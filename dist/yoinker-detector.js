(()=>{var d=Object.defineProperty;var h=(l,e)=>d(l,"name",{value:e,configurable:!0});const g=class g extends CustomModule{constructor(){super({name:"Yoinker Detector \u{1F6A8}",description:"Automatically checks users against yoinker detection database and applies tags + notifications",authors:[{name:"Bluscream",description:"VRCX Plugin System Maintainer",userId:"usr_08082729-592d-4098-9a21-83c8dd37a844"}],tags:["Security","Social","Integration"],required_dependencies:[]}),this.processedUsers=new Set,this.pendingQueue=new Set,this.isProcessing=!1,this.yoinkerCheckCache=new Map,this.rateLimits={lastRequest:0,minInterval:1e3},this.logger.log("\u{1F50D} Yoinker Detector initialized"),this.actionButtons=[{title:"Clear Cache",color:"danger",icon:"ri-delete-bin-line",description:"Clear all processed users, cache, and reset stats",callback:async()=>{confirm(`Clear all processed users, cache, and stats?

This cannot be undone!`)&&(this.clearCache(),this.logger.showSuccess("Cache cleared successfully!"))}}]}async load(){this.logger.log("\u{1F4E6} Loading Yoinker Detector...");const e=window.customjs.types.SettingType;this.categories=this.defineSettingsCategories({general:{name:"\u{1F6A8} General Settings",description:"Basic plugin configuration"},detection:{name:"\u{1F6A8} Detection Triggers",description:"Control when to check users"},notifications:{name:"\u{1F6A8} Notifications",description:"Configure notification settings"},tagging:{name:"\u{1F6A8} Auto-Tagging",description:"Automatically tag detected yoinkers"},advanced:{name:"\u{1F6A8} Advanced Options",description:"Advanced configuration and cache settings"}}),this.settings=this.defineSettings({logToConsole:{type:e.BOOLEAN,description:"Log detection results to browser console",category:"general",default:!0},checkOnDialogOpen:{type:e.BOOLEAN,description:"Check users when their profile dialog is opened",category:"detection",default:!0},checkOnPlayerJoin:{type:e.BOOLEAN,description:"Check users when they join your instance",category:"detection",default:!0},desktopNotification:{type:e.BOOLEAN,description:"Show desktop notification for yoinker detection",category:"notifications",default:!0},vrNotification:{type:e.BOOLEAN,description:"Show VR notification (XSOverlay, OVR Toolkit) for yoinker detection",category:"notifications",default:!0},autoTag:{type:e.BOOLEAN,description:"Automatically add tags to detected yoinkers",category:"tagging",default:!0},tagName:{type:e.STRING,description:"Name of the tag to add to yoinkers",category:"tagging",placeholder:"Yoinker",default:"Yoinker"},tagColor:{type:e.STRING,description:"Color of the tag (hex format)",category:"tagging",placeholder:"#ff0000",default:"#ff0000"},skipExistingTags:{type:e.BOOLEAN,description:"Don't check users who already have a custom tag",category:"advanced",default:!0},cacheExpiration:{type:e.NUMBER,description:"How long to cache check results (minutes)",category:"advanced",default:30},endpoint:{type:e.STRING,description:"Yoinker detection API endpoint",category:"advanced",placeholder:"https://yd.just-h.party/",default:"https://yd.just-h.party/"},statsTotalChecked:{type:e.NUMBER,description:"Total users checked (hidden stat)",default:0,hidden:!0},statsTotalYoinkers:{type:e.NUMBER,description:"Total yoinkers found (hidden stat)",default:0,hidden:!0},statsCacheHits:{type:e.NUMBER,description:"Cache hit count (hidden stat)",default:0,hidden:!0},statsErrors:{type:e.NUMBER,description:"Error count (hidden stat)",default:0,hidden:!0},processedUsersData:{type:e.STRING,description:"Processed users data (hidden)",default:"[]",hidden:!0},migrationComplete:{type:e.BOOLEAN,description:"Migration from localStorage complete (hidden)",default:!1,hidden:!0}}),this.logger.log(`\u2699\uFE0F Endpoint: ${this.settings.store.endpoint}`),this.migrateFromLocalStorage(),this.loadProcessedUsers(),this.logger.log("\u2705 Yoinker Detector loaded")}async start(){this.logger.log("\u{1F680} Starting Yoinker Detector..."),this.hookUserEvents(),this.logger.log("\u2705 Yoinker Detector started and monitoring")}async stop(){this.logger.log("\u{1F6D1} Stopping Yoinker Detector..."),this.saveProcessedUsers()}hookUserEvents(){try{this.settings.store.checkOnDialogOpen&&(this.registerPostHook("$pinia.user.showUserDialog",(e,t)=>{const s=t[0];s&&this.processUserId(s,"User Dialog Opened")}),this.logger.log("\u2705 User dialog hook registered")),this.settings.store.checkOnPlayerJoin&&(this.registerPostHook("$pinia.gameLog.addGameLog",(e,t)=>{const s=t[0];s?.type==="OnPlayerJoined"&&s.userId&&this.processUserId(s.userId,"Player Join")}),this.logger.log("\u2705 Player join hook registered")),this.logger.log("\u2705 Event hooks registered")}catch(e){const t=e instanceof Error?e.message:String(e);this.logger.error(`Failed to register event hooks: ${t}`)}}processUserId(e,t="unknown"){if(!(!e||typeof e!="string")&&e.match(/^usr_[0-9A-Fa-f]{8}-([0-9A-Fa-f]{4}-){3}[0-9A-Fa-f]{12}$/)){if(this.settings.store.skipExistingTags){const s=this.getUserTag(e);if(s){this.settings.store.logToConsole&&this.logger.log(`\u23ED\uFE0F Skipping ${e} - already has tag: ${s.tag}`);return}}this.processedUsers.has(e)||(this.settings.store.logToConsole&&this.logger.log(`\u{1F4CB} Queuing user: ${e} (from: ${t})`),this.pendingQueue.add(e),this.processedUsers.add(e),this.settings.store.statsTotalChecked++,this.processQueue())}}async processQueue(){if(!(this.isProcessing||this.pendingQueue.size===0)){this.isProcessing=!0;try{const e=Array.from(this.pendingQueue)[0];await this.checkUser(e),this.pendingQueue.delete(e),this.pendingQueue.size>0?setTimeout(()=>{this.isProcessing=!1,this.processQueue()},this.rateLimits.minInterval):(this.isProcessing=!1,this.saveProcessedUsers())}catch(e){const t=e instanceof Error?e.message:String(e);this.logger.error(`Error processing queue: ${t}`),this.isProcessing=!1}}}async checkUser(e){const t=this.yoinkerCheckCache.get(e);if(t)if((Date.now()-t.timestamp)/1e3/60<this.settings.store.cacheExpiration*6e4){this.settings.store.statsCacheHits++,t.isYoinker?this.handleYoinkerDetected(t):this.settings.store.logToConsole&&this.logger.log(`\u2705 User ${e} not a yoinker (cached result)`);return}else this.yoinkerCheckCache.delete(e);await this.waitForRateLimit();try{const s=await this.hashUserId(e),i=`${this.settings.store.endpoint}${s}`,r=await fetch(i,{method:"GET",headers:{"User-Agent":"VRCX-YoinkerDetector/1.0"}});if(r.status===404){const a={userId:e,isYoinker:!1,timestamp:Date.now()};this.yoinkerCheckCache.set(e,a),this.settings.store.logToConsole&&this.logger.log(`\u2705 User ${e} not found in yoinker database`);return}if(r.status===429){this.logger.warn("\u26A0\uFE0F Rate limited by yoinker detection API");return}if(!r.ok){this.settings.store.statsErrors++,this.logger.error(`HTTP error ${r.status} for user ${e}`);return}const n=await r.json();if(n&&n.IsYoinker){const a={userId:n.UserId||e,userName:n.UserName||"Unknown",isYoinker:!0,reason:n.Reason||"unknown reason",year:n.Year||"unknown",timestamp:Date.now()};this.yoinkerCheckCache.set(e,a),this.settings.store.statsTotalYoinkers++,this.handleYoinkerDetected(a)}else{const a={userId:e,isYoinker:!1,timestamp:Date.now()};this.yoinkerCheckCache.set(e,a),this.settings.store.logToConsole&&this.logger.log(`\u2705 User ${e} checked - not a yoinker`)}}catch(s){this.settings.store.statsErrors++;const o=s instanceof Error?s.message:String(s);this.logger.error(`Error checking user ${e}: ${o}`)}}handleYoinkerDetected(e){const t=`User ${e.userName} has been found ${e.reason}. (detection year: ${e.year})`;this.settings.store.autoTag&&this.applyYoinkerTag(e.userId);const s={console:this.settings.store.logToConsole,desktop:this.settings.store.desktopNotification,xsoverlay:this.settings.store.vrNotification,ovrtoolkit:this.settings.store.vrNotification};this.logger.log(t,s,"warn")}applyYoinkerTag(e){try{const t=window.$pinia?.user;if(!t){this.logger.warn("User store not available, cannot apply tag");return}const s=this.settings.store.tagName,o=this.settings.store.tagColor;t.addCustomTag({UserId:e,Tag:s,TagColour:o}),this.settings.store.logToConsole&&this.logger.log(`\u{1F3F7}\uFE0F Applied tag "${s}" to user ${e}`)}catch(t){const s=t instanceof Error?t.message:String(t);this.logger.error(`Error applying tag to user ${e}: ${s}`)}}async hashUserId(e){const s=new TextEncoder().encode(e),o=await crypto.subtle.digest("SHA-256",s),i=Array.from(new Uint8Array(o));return btoa(String.fromCharCode(...i)).replace(/\//g,"-")}async waitForRateLimit(){const t=Date.now()-this.rateLimits.lastRequest;if(t<this.rateLimits.minInterval){const s=this.rateLimits.minInterval-t;await new Promise(o=>setTimeout(o,s))}this.rateLimits.lastRequest=Date.now()}getUserTag(e){const t=window.$pinia?.user?.customUserTags;return!t||t.size===0?null:t.get(e)||null}migrateFromLocalStorage(){if(!this.settings.store.migrationComplete)try{const e=localStorage.getItem("yoinkerdetector_processed");if(e){const t=JSON.parse(e);if(t.users&&Array.isArray(t.users)&&(this.settings.store.processedUsersData=JSON.stringify(t.users)),t.stats&&(this.settings.store.statsTotalChecked=t.stats.totalChecked||0,this.settings.store.statsTotalYoinkers=t.stats.totalYoinkers||0,this.settings.store.statsCacheHits=t.stats.cacheHits||0,this.settings.store.statsErrors=t.stats.errors||0),t.cache){const s=this.settings.store.cacheExpiration*6e4;for(const[o,i]of Object.entries(t.cache))(Date.now()-i.timestamp)/1e3/60<s&&this.yoinkerCheckCache.set(o,i)}localStorage.removeItem("yoinkerdetector_processed"),this.logger.log("\u2705 Successfully migrated data from localStorage to settings store")}this.settings.store.migrationComplete=!0}catch(e){const t=e instanceof Error?e.message:String(e);this.logger.error(`Error during migration from localStorage: ${t}`),this.settings.store.migrationComplete=!0}}loadProcessedUsers(){try{const e=JSON.parse(this.settings.store.processedUsersData);this.processedUsers=new Set(e||[]),this.logger.log(`\u{1F4C2} Loaded ${this.processedUsers.size} processed users (cache is session-only)`)}catch(e){const t=e instanceof Error?e.message:String(e);this.logger.error(`Error loading processed users: ${t}`)}}saveProcessedUsers(){try{this.settings.store.processedUsersData=JSON.stringify(Array.from(this.processedUsers))}catch(e){const t=e instanceof Error?e.message:String(e);this.logger.error(`Error saving processed users: ${t}`)}}getStats(){return{totalChecked:this.settings.store.statsTotalChecked,totalYoinkers:this.settings.store.statsTotalYoinkers,cacheHits:this.settings.store.statsCacheHits,errors:this.settings.store.statsErrors,processedUsers:this.processedUsers.size,pendingQueue:this.pendingQueue.size,cachedResults:this.yoinkerCheckCache.size}}clearCache(){this.processedUsers.clear(),this.pendingQueue.clear(),this.yoinkerCheckCache.clear(),this.settings.store.statsTotalChecked=0,this.settings.store.statsTotalYoinkers=0,this.settings.store.statsCacheHits=0,this.settings.store.statsErrors=0,this.settings.store.processedUsersData="[]",localStorage.removeItem("yoinkerdetector_processed"),this.logger.log("\u{1F5D1}\uFE0F Cleared all processed users and cache!")}async manualCheck(e){this.logger.log(`\u{1F50D} Manually checking user: ${e}`),this.processedUsers.delete(e),this.yoinkerCheckCache.delete(e),this.processUserId(e,"Manual Check")}};h(g,"YoinkerDetectorPlugin");let c=g;window.customjs.__LAST_PLUGIN_CLASS__=c;})();
