(()=>{var v=Object.defineProperty;var g=(I,e)=>v(I,"name",{value:e,configurable:!0});const p=class p extends CustomModule{constructor(){super({name:"Context Menu API \u{1F4CB}",description:"Custom context menu management for VRCX dialogs",authors:[{name:"Bluscream",description:"VRCX Plugin System Maintainer",userId:"usr_08082729-592d-4098-9a21-83c8dd37a844"}],tags:["API","Core","Context","Library"],required_dependencies:[]}),this.menuTypes=["user","world","avatar","group","instance"],this.items=new Map,this.menuContainers=new Map,this.processedMenus=new Set,this.debounceTimers=new Map}async load(){this.menuTypes.forEach(e=>{this.items.set(e,new Map)}),this.logger.log("Context Menu API ready"),this.loaded=!0}async start(){const e=new MutationObserver(t=>{this.handleMutations(t)});this.registerObserver(e),e.observe(document.body,{childList:!0,subtree:!0,attributes:!0,attributeFilter:["style","aria-hidden","class"]}),this.enabled=!0,this.started=!0,this.logger.log("Context Menu API started, watching for dialogs"),window.dispatchEvent(new CustomEvent("contextMenuReady",{detail:{contextMenu:this}}))}async onLogin(e){}async stop(){this.logger.log("Stopping Context Menu API"),this.debounceTimers.forEach(e=>clearTimeout(e)),this.debounceTimers.clear(),this.items.forEach(e=>e.clear()),this.processedMenus.clear(),this.menuContainers.clear(),await super.stop()}handleMutations(e){e.forEach(t=>{t.type==="attributes"&&t.target&&this.handleAttributeChange(t.target),t.addedNodes.length&&t.addedNodes.forEach(r=>this.handleAddedNode(r)),t.removedNodes.length&&t.removedNodes.forEach(r=>this.handleRemovedNode(r))})}handleAttributeChange(e){if(e.classList&&e.classList.contains("el-dropdown__popper")&&e.style.display!=="none"&&e.getAttribute("aria-hidden")!=="true"){const r=e.querySelector(".el-dropdown-menu");if(r){const i=r.id||`menu-${Date.now()}`;if(!this.processedMenus.has(i)){const o=this.detectMenuType(r);o&&this.items.get(o).size>0&&this.debouncedMenuDetection(i,o,r)}}}}handleAddedNode(e){if(e.classList&&(e.classList.contains("el-dropdown-menu__item")||e.classList.contains("el-dropdown-item")||e.classList.contains("el-dropdown-menu"))){let t=null,r=null;if(e.classList.contains("el-dropdown-menu")?(t=e,r=e.id||`menu-${Date.now()}`):(t=e.parentElement,r=e.parentElement?.id||`menu-${Date.now()}`),!t||this.processedMenus.has(r))return;const i=this.detectMenuType(t);i&&this.items.get(i).size>0&&this.debouncedMenuDetection(r,i,t)}}handleRemovedNode(e){if(e.classList&&(e.classList.contains("el-dropdown-menu__item")||e.classList.contains("el-dropdown-item")||e.classList.contains("el-dropdown-menu"))){let t=null;e.classList.contains("el-dropdown-menu")?t=e.id:t=e.parentElement?.id,this.processedMenus.has(t)&&(document.contains(e.parentElement)||(this.debounceTimers.has(t)&&(clearTimeout(this.debounceTimers.get(t)),this.debounceTimers.delete(t)),this.processedMenus.delete(t),this.menuContainers.delete(t)))}}debouncedMenuDetection(e,t,r){this.debounceTimers.has(e)&&clearTimeout(this.debounceTimers.get(e));const i=setTimeout(()=>{const o=r.closest(".el-dropdown__popper");o?o.style.display!=="none"&&o.getAttribute("aria-hidden")!=="true"&&this.processMenu(e,t,r):this.processMenu(e,t,r),this.debounceTimers.delete(e)},100);this.debounceTimers.set(e,i)}detectMenuType(e){const r=Array.from(document.querySelectorAll(".el-dropdown__popper")).filter(d=>d.style.display!=="none"&&d.getAttribute("aria-hidden")!=="true").sort((d,u)=>{const c=parseInt(window.getComputedStyle(d).zIndex)||0;return(parseInt(window.getComputedStyle(u).zIndex)||0)-c})[0];if(!r||!r.contains(e))return null;let i=null;const o=r.id;if(o&&(i=document.querySelector(`[aria-controls="${o}"]`)),!i){const d=[...Array.from(document.querySelectorAll(".x-user-dialog")),...Array.from(document.querySelectorAll(".x-avatar-dialog")),...Array.from(document.querySelectorAll(".x-world-dialog")),...Array.from(document.querySelectorAll(".x-group-dialog"))].filter(u=>window.getComputedStyle(u).display!=="none");for(const u of d){const c=u.querySelectorAll("button[aria-controls], button.el-dropdown__caret-button");for(const m of Array.from(c)){const f=m.getBoundingClientRect(),w=r.getBoundingClientRect();if(Math.abs(f.bottom-w.top)<100&&Math.abs(f.left-w.left)<200){i=m;break}}if(i)break}}if(!i)return null;const s=i.closest(".x-user-dialog"),a=i.closest(".x-avatar-dialog"),l=i.closest(".x-world-dialog"),n=i.closest(".x-group-dialog");return s?"user":a?"avatar":l?"world":n?"group":null}processMenu(e,t,r){this.processedMenus.add(e),this.menuContainers.set(e,{menuType:t,container:r});const i=this.items.get(t);if(!i||i.size===0)return;const o=new Map;i.forEach((a,l)=>{const n=a.pluginId||"unknown";o.has(n)||o.set(n,[]),o.get(n).push({itemId:l,item:a})});let s=!0;o.forEach((a,l)=>{a.forEach((n,d)=>{const u=!s&&d===0;this.addMenuItemToContainer(r,t,n.itemId,n.item,u)}),s=!1})}addMenuItemToContainer(e,t,r,i,o=!1){if(e.querySelector(`[data-custom-item-id="${r}"]`))return;const s=document.createElement("li");if(s.className="el-dropdown-menu__item",s.setAttribute("data-custom-item-id",r),s.tabIndex=-1,o&&s.classList.add("el-dropdown-menu__item--divided"),i.icon){const n=document.createElement("i");n.className=i.icon,n.style.marginRight="8px",s.appendChild(n)}const a=document.createTextNode(i.text);s.appendChild(a);const l=g(()=>{this.handleItemClick(t,r,i)},"clickHandler");this.registerListener(s,"click",l),e.appendChild(s)}handleItemClick(e,t,r){const i=this.getDialogData(e);if(r.onClick&&typeof r.onClick=="function")try{r.onClick(i)}catch(o){const s=o instanceof Error?o.message:String(o);this.logger.error(`Error in ${e} menu item ${t}: ${s}`)}}getDialogData(e){const r={user:".x-user-dialog",avatar:".x-avatar-dialog",world:".x-world-dialog",group:".x-group-dialog"}[e];if(!r)return null;const i=document.querySelectorAll(r);if(!Array.from(i).find(s=>window.getComputedStyle(s).display!=="none"))return null;try{if(e==="user"&&window.$pinia?.user){const s=window.$pinia.user.userDialog;if(s&&s.visible&&s.ref)return s.ref}else if(e==="avatar"&&window.$pinia?.avatar){const s=window.$pinia.avatar.avatarDialog;if(s&&s.visible&&s.ref)return s.ref}else if(e==="world"&&window.$pinia?.world){const s=window.$pinia.world.worldDialog;if(s&&s.visible&&s.ref)return s.ref}else if(e==="group"&&window.$pinia?.group){const s=window.$pinia.group.groupDialog;if(s&&s.visible&&s.ref)return s.ref}}catch(s){const a=s instanceof Error?s.message:String(s);this.logger.error(`Error extracting dialog data from Pinia: ${a}`)}return null}addUserItem(e,t){return this.addItem("user",e,t)}addAvatarItem(e,t){return this.addItem("avatar",e,t)}addWorldItem(e,t){return this.addItem("world",e,t)}addGroupItem(e,t){return this.addItem("group",e,t)}addInstanceItem(e,t){return this.addItem("instance",e,t)}addItem(e,t,r){if(!this.menuTypes.includes(e))return this.logger.error(`Invalid menu type: ${e}`),!1;if(!r||!r.text)return this.logger.error("Menu item must have a 'text' property"),!1;if(!r.pluginId)try{const s=(new Error().stack||"").match(/\[CJS\|([^\]]+)\]/);s&&(r.pluginId=s[1])}catch{}return this.items.get(e).set(t,r),this.logger.log(`Added ${e} menu item: ${t}${r.pluginId?` (plugin: ${r.pluginId})`:""}`),!0}removeUserItem(e){return this.removeItem("user",e)}removeAvatarItem(e){return this.removeItem("avatar",e)}removeWorldItem(e){return this.removeItem("world",e)}removeGroupItem(e){return this.removeItem("group",e)}removeInstanceItem(e){return this.removeItem("instance",e)}removeItem(e,t){const r=this.items.get(e);if(r){const i=r.delete(t);return i&&(this.logger.log(`Removed ${e} menu item: ${t}`),this.removeItemFromOpenMenus(t)),i}return!1}removeItemFromOpenMenus(e){this.menuContainers.forEach(({container:t})=>{const r=t.querySelector(`[data-custom-item-id="${e}"]`);r&&r.remove()})}updateUserItem(e,t){return this.updateItem("user",e,t)}updateAvatarItem(e,t){return this.updateItem("avatar",e,t)}updateWorldItem(e,t){return this.updateItem("world",e,t)}updateGroupItem(e,t){return this.updateItem("group",e,t)}updateItem(e,t,r){const o=this.items.get(e)?.get(t);return o?(Object.assign(o,r),this.logger.log(`Updated ${e} menu item: ${t}`),this.updateItemInOpenMenus(e,t,o),!0):(this.logger.warn(`Cannot update ${e} item ${t}: not found`),!1)}updateItemInOpenMenus(e,t,r){this.menuContainers.forEach(({menuType:i,container:o})=>{if(i===e){const s=o.querySelector(`[data-custom-item-id="${t}"]`);if(s){const a=Array.from(s.childNodes).find(n=>n.nodeType===Node.TEXT_NODE);a&&(a.textContent=r.text);const l=s.querySelector("i");if(r.icon)if(l)l.className=r.icon;else{const n=document.createElement("i");n.className=r.icon,n.style.marginRight="8px",s.insertBefore(n,s.firstChild)}else l&&l.remove()}}})}clearUserItems(){return this.clearItems("user")}clearAvatarItems(){return this.clearItems("avatar")}clearWorldItems(){return this.clearItems("world")}clearGroupItems(){return this.clearItems("group")}clearItems(e){const t=this.items.get(e);return t?(t.clear(),this.logger.log(`Cleared all ${e} menu items`),!0):!1}};g(p,"ContextMenuApiPlugin");let h=p;window.customjs.__LAST_PLUGIN_CLASS__=h;})();
