(()=>{var v=Object.defineProperty;var b=(A,i)=>v(A,"name",{value:i,configurable:!0});const O=class O extends CustomModule{constructor(){super({name:"Bio Change Notifier \u{1F514}",description:"Get notified when friends change their bio with a detailed diff view",authors:[{name:"Bluscream",description:"VRCX Plugin System Maintainer",userId:"usr_08082729-592d-4098-9a21-83c8dd37a844"}],tags:["Notifications","Social"],dependencies:[]}),this.feedStore=null,this.actionButtons=[{label:"Open Bio Feed",color:"primary",icon:"ri-file-list-3-line",title:"Open feed filtered by bio changes with entries expanded",callback:async()=>{await this.openBioFeed()}}]}async load(){const i=window.customjs.types.SettingType;this.categories=this.defineSettingsCategories({notifications:{name:"\u{1F514} Notification Settings",description:"Control when and how bio change notifications appear"},filters:{name:"\u{1F50D} Filter Settings",description:"Filter which bio changes trigger notifications"},display:{name:"\u{1F3A8} Display Settings",description:"Customize how bio changes are displayed"}}),this.settings=this.defineSettings({enabled:{type:i.BOOLEAN,description:"Enable bio change notifications",category:"notifications",default:!0},notifyFriendsOnly:{type:i.BOOLEAN,description:"Only notify for friends (not all users)",category:"filters",default:!0},notifyVIPOnly:{type:i.BOOLEAN,description:"Only notify for VIP/favorite users",category:"filters",default:!1},showDesktopNotification:{type:i.BOOLEAN,description:"Show desktop toast notification",category:"notifications",default:!0},showVRNotification:{type:i.BOOLEAN,description:"Show VR overlay notification",category:"notifications",default:!0},maxDiffLines:{type:i.NUMBER,description:"Maximum number of diff lines to show in notification (0 = show all)",category:"display",default:5},ignoreEmptyBio:{type:i.BOOLEAN,description:"Don't notify when bio becomes empty",category:"filters",default:!0},minBioLength:{type:i.NUMBER,description:"Minimum bio length to trigger notification (0 = no minimum)",category:"filters",default:0}}),this.logger.log("Bio Change Notifier settings loaded"),this.loaded=!0}async start(){this.enabled=!0,window.$pinia&&(this.feedStore=window.$pinia.feed),this.registerPostHook("$pinia.feed.addFeed",(i,t)=>{const e=t[0];e&&e.type==="Bio"&&this.handleBioChange(e)}),this.registerVoidHook("$pinia.notification.playNotyTTS",i=>{const[t,e,o]=i;if(t.type==="Bio"&&window.$pinia?.notification?.state?.notificationsSettingsStore){const a=window.$pinia.notification.state.notificationsSettingsStore;a?.speak&&a.speak(`${e} changed their bio`)}}),this.registerVoidHook("$pinia.notification.displayDesktopToast",i=>{const[t,e,o]=i;t.type==="Bio"&&this.displayBioDesktopNotification(t,e,o)}),this.registerVoidHook("$pinia.notification.displayXSNotification",i=>{const[t,e,o]=i;t.type==="Bio"&&window.AppApi?.XSNotification&&this.displayBioXSNotification(t,e,o)}),this.registerVoidHook("$pinia.notification.displayOvrtNotification",i=>{const[t,e,o,a,s]=i;o.type==="Bio"&&window.AppApi?.OVRTNotification&&this.displayBioOvrtNotification(t,e,o,a,s)}),this.started=!0,this.logger.log("Bio Change Notifier started")}async stop(){this.logger.log("Stopping Bio Change Notifier"),await super.stop()}async handleBioChange(i){try{if(!this.settings.store.enabled||!this.shouldNotify(i))return;await this.sendBioChangeNotification(i)}catch(t){this.logger.error(`Error handling bio change: ${t.message}`)}}shouldNotify(i){const t=window.$pinia?.friend,e=window.$pinia?.favorite;return!(this.settings.store.notifyVIPOnly&&!e?.localFavoriteFriends?.has(i.userId)||this.settings.store.notifyFriendsOnly&&!t?.friends?.has(i.userId)||this.settings.store.ignoreEmptyBio&&(!i.bio||i.bio.trim().length===0)||this.settings.store.minBioLength>0&&(!i.bio||i.bio.length<this.settings.store.minBioLength))}async sendBioChangeNotification(i){const t=i.displayName||"Unknown User",e=i.previousBio||"",o=i.bio||"",a=this.generateBioDiff(e,o),s={type:"Bio",displayName:t,userId:i.userId,bio:o,previousBio:e,created_at:i.created_at||new Date().toJSON(),message:a};if(window.$pinia?.notification?.playNoty&&(this.settings.store.showDesktopNotification||this.settings.store.showVRNotification)){const h=window.$pinia.notification,c={};try{this.queueBioNoty(s)}catch(n){this.logger.error(`Error sending notification: ${n.message}`)}}this.logger.log(`Bio change notification sent for ${t}`)}queueBioNoty(i){const t=window.$pinia?.friend;i.isFriend=t?.friends?.has(i.userId)||!1,i.isFavorite=t?.localFavoriteFriends?.has(i.userId)||!1,window.$pinia?.notification?.playNoty&&window.$pinia.notification.playNoty(i)}generateBioDiff(i,t){const e=this.settings.store.maxDiffLines,o=i.split(`
`),a=t.split(`
`),s=[],h=Math.max(o.length,a.length);for(let c=0;c<h;c++){const n=o[c]||"",f=a[c]||"";n!==f&&(n&&f?s.push(`${n} \u2192 ${f}`):n?s.push(`- ${n}`):f&&s.push(`+ ${f}`))}if(e>0&&s.length>e){const c=s.slice(0,e);return c.push(`... (${s.length-e} more changes)`),c.join(`
`)}return s.length>0?s.join(`
`):"Bio changed"}formatDifference(i,t){const e='<span class="x-text-added">{{text}}</span>',o='<span class="x-text-removed">{{text}}</span>';[i,t]=[i,t].map(n=>n.replaceAll(/&/g,"&amp;").replaceAll(/</g,"&lt;").replaceAll(/>/g,"&gt;").replaceAll(/"/g,"&quot;").replaceAll(/'/g,"&#039;").replaceAll(/\n/g,"<br>"));const a=i.split(/\s+/).flatMap(n=>n.split(/(<br>)/)),s=t.split(/\s+/).flatMap(n=>n.split(/(<br>)/)),h=b((n,f,d,u)=>{let g=n,r=d,S=0;const w=new Map;for(let l=n;l<f;l++){const y=a[l];w.has(y)||w.set(y,[]),w.get(y).push(l)}for(let l=d;l<u;l++){const y=s[l];if(w.has(y))for(const N of w.get(y)){let p=0;for(;N+p<f&&l+p<u&&a[N+p]===s[l+p];)p++;p>S&&(g=N,r=l,S=p)}}return{oldStart:g,newStart:r,size:S}},"findLongestMatch"),c=b((n,f,d,u)=>{const g=[],r=h(n,f,d,u);if(r.size>0)(n<r.oldStart||d<r.newStart)&&g.push(...c(n,r.oldStart,d,r.newStart)),g.push(a.slice(r.oldStart,r.oldStart+r.size).join(" ")),(r.oldStart+r.size<f||r.newStart+r.size<u)&&g.push(...c(r.oldStart+r.size,f,r.newStart+r.size,u));else{const S=b((w,l,y,N)=>{let p=[],B=w.slice(l,y).filter(m=>m.length>0).join(" ").split("<br>");for(let m=0;m<B.length;m++)m>0&&p.push("<br>"),!(B[m].length<1)&&p.push(N.replace("{{text}}",B[m]));return p},"build");n<f&&g.push(...S(a,n,f,o)),d<u&&g.push(...S(s,d,u,e))}return g},"buildDiff");return c(0,a.length,0,s.length).join(" ").replaceAll(/<br>\s+/g,"<br>").replaceAll(/\s+<br>/g,"<br>")}displayBioDesktopNotification(i,t,e){try{const o=window.$pinia?.notification;if(!o?.state?.desktopNotification)return;const a=this.generateBioDiff(i.previousBio,i.bio),s=o.state.desktopNotification;s(i.displayName,`changed bio:
${a}`,e)}catch(o){this.logger.error(`Error displaying desktop notification: ${o.message}`)}}displayBioXSNotification(i,t,e){try{const o=window.$pinia?.notification,a=window.$pinia?.advancedSettings,s=window.$pinia?.notificationsSettings;if(!window.AppApi?.XSNotification)return;const h=Math.floor(parseInt(s?.notificationTimeout||5e3,10)/1e3),c=parseFloat(a?.notificationOpacity||100)/100,n=this.generateBioDiff(i.previousBio,i.bio);window.AppApi.XSNotification("VRCX",`${i.displayName} changed bio:
${n}`,h,c,e)}catch(o){this.logger.error(`Error displaying XS notification: ${o.message}`)}}displayBioOvrtNotification(i,t,e,o,a){try{const s=window.$pinia?.notification,h=window.$pinia?.advancedSettings,c=window.$pinia?.notificationsSettings;if(!window.AppApi?.OVRTNotification)return;const n=Math.floor(parseInt(c?.notificationTimeout||5e3,10)/1e3),f=parseFloat(h?.notificationOpacity||100)/100,d=this.generateBioDiff(e.previousBio,e.bio);window.AppApi.OVRTNotification(i,t,"VRCX",`${e.displayName} changed bio:
${d}`,n,f,a)}catch(s){this.logger.error(`Error displaying OVRT notification: ${s.message}`)}}async openBioFeed(){try{const i=window.$pinia?.ui,t=window.$pinia?.feed;if(!i||!t){this.logger.showError("Cannot access UI or Feed store");return}i.menuActiveIndex="feed",t.feedTable.filter=["Bio"],t.feedTable.search="",await t.feedTableLookup(),setTimeout(()=>{try{const e=document.querySelectorAll(".el-table__expand-icon:not(.el-table__expand-icon--expanded)");e.forEach(o=>{o.click()}),this.logger.showSuccess(`Opened Bio feed with ${e.length} entries`)}catch(e){this.logger.warn(`Could not auto-expand entries: ${e.message}`)}},500),this.logger.showInfo("Opening Bio feed...")}catch(i){this.logger.error(`Error opening bio feed: ${i.message}`),this.logger.showError("Failed to open bio feed")}}};b(O,"BioChangeNotifierPlugin");let $=O;window.customjs.__LAST_PLUGIN_CLASS__=$;})();
