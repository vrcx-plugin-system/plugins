(()=>{var c=Object.defineProperty;var o=(a,e)=>c(a,"name",{value:e,configurable:!0});const n=class n extends Plugin{constructor(){super({name:"\u{1F47B} Invisible Players Monitor",description:"Detects and notifies when potentially invisible players are in your instance",author:"Bluscream",build:"1728935100",tags:["Monitor","Security"],dependencies:[]}),this.lastInvisiblePlayers=0}async load(){const e=window.customjs.SettingType;this.categories=this.defineSettingsCategories({general:{name:"\u{1F47B} General Settings",description:"Basic detection configuration"},display:{name:"\u{1F47B} Display",description:"Control how invisible players are shown"},notifications:{name:"\u{1F47B} Notifications",description:"Configure detection notifications"}}),this.settings=this.defineSettings({modifyInstanceName:{type:e.BOOLEAN,description:"Add invisible player count to instance display name",category:"display",default:!0},showNotification:{type:e.BOOLEAN,description:"Show notification when invisible players are detected",category:"notifications",default:!0},notifyOnlyOnChange:{type:e.BOOLEAN,description:"Only show notification when invisible player count changes",category:"notifications",default:!0}}),this.logger.log(`\u2699\uFE0F Modify instance name: ${this.settings.store.modifyInstanceName}`),this.logger.log("Invisible Players Monitor plugin ready"),this.loaded=!0}async start(){this.setupInstanceMonitoring(),this.enabled=!0,this.started=!0,this.logger.log("Invisible Players Monitor plugin started")}async onLogin(e){this.lastInvisiblePlayers=0}async stop(){this.logger.log("Stopping Invisible Players Monitor plugin"),await super.stop()}setupInstanceMonitoring(){const e=setInterval(()=>{window.customjs?.pluginManager?.registerPostHook&&(clearInterval(e),this.registerPostHook("request.instanceRequest.getInstance",(i,r)=>{i&&typeof i.then=="function"&&i.then(t=>{this.handleInstanceData(t)})}),this.logger.log("Instance monitoring hook registered"))},100);setTimeout(()=>{clearInterval(e)},1e4)}handleInstanceData(e){try{const i=e.json.userCount,t=e.json.n_users-e.json.queueSize-i;if(t>0){if(this.settings.store.modifyInstanceName&&(e.json.invisiblePlayers=t,e.json.displayName=`${e.json.displayName??e.json.name} (${t} invisible)`),this.logger.warn(`Found ${t} potentially invisible players in instance "${e.json.instanceId}" in world "${e.json.worldName}"`),this.settings.store.showNotification){if(this.settings.store.notifyOnlyOnChange&&t===this.lastInvisiblePlayers)return;const l=`Found <strong>${t}</strong> potentially invisible player${t>1?"s":""}`;this.logger.log(l,{console:!1,desktop:!0,xsoverlay:!0,ovrtoolkit:!0},"warning")}this.lastInvisiblePlayers=t}else this.lastInvisiblePlayers=0}catch(i){this.logger.error("Error handling instance data:",i)}}getLastInvisiblePlayersCount(){return this.lastInvisiblePlayers}async triggerCheck(){this.logger.log("Manual instance check triggered")}};o(n,"InvisiblePlayersMonitorPlugin");let s=n;window.customjs.__LAST_PLUGIN_CLASS__=s;})();
