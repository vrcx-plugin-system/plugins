(()=>{var u=Object.defineProperty;var c=(h,e)=>u(h,"name",{value:e,configurable:!0});const p=class p extends CustomModule{constructor(){super({name:"Dialog API \u{1F4AC}",description:"API for creating and showing custom dialogs in VRCX",authors:[{name:"Bluscream",description:"VRCX Plugin System Maintainer",userId:"usr_08082729-592d-4098-9a21-83c8dd37a844"}],tags:["API","Core","Dialog","Library"],required_dependencies:[]}),this.customDialogs=new Map,this.dialogContainers=new Map,this.dialogWrapperElement=null}async load(){this.registerEvent("ShowUserDialog",{description:"Fired when a user dialog is opened",payload:{userId:"string - User ID that was opened",timestamp:"number - Unix timestamp"},broadcastIPC:!1,logToConsole:!0}),this.registerEvent("ShowWorldDialog",{description:"Fired when a world dialog is opened",payload:{worldId:"string - World ID or location tag",shortName:"string - Optional short name",timestamp:"number - Unix timestamp"},broadcastIPC:!0,logToConsole:!0}),this.registerEvent("ShowAvatarDialog",{description:"Fired when an avatar dialog is opened",payload:{avatarId:"string - Avatar ID that was opened",timestamp:"number - Unix timestamp"},broadcastIPC:!0,logToConsole:!0}),this.registerEvent("ShowGroupDialog",{description:"Fired when a group dialog is opened",payload:{groupId:"string - Group ID that was opened",timestamp:"number - Unix timestamp"},broadcastIPC:!0,logToConsole:!0}),this.registerEvent("ShowLaunchDialog",{description:"Fired when a VRChat launch dialog is opened",payload:{location:"string - Location tag",shortName:"string - Optional short name",dialog:"object - Full dialog reference",timestamp:"number - Unix timestamp"},broadcastIPC:!1,logToConsole:!0}),this.registerEvent("ShowGalleryDialog",{description:"Fired when gallery dialog is opened",payload:{dialog:"object - Gallery dialog state",timestamp:"number - Unix timestamp"},broadcastIPC:!1,logToConsole:!0}),this.registerEvent("ShowFavoriteDialog",{description:"Fired when favorite management dialog is opened",payload:{type:"string - Favorite type (world/avatar)",objectId:"string - Object ID",dialog:"object - Favorite dialog state",timestamp:"number - Unix timestamp"},broadcastIPC:!1,logToConsole:!0}),this.registerEvent("ShowWorldImportDialog",{description:"Fired when world favorites import dialog is opened",payload:{timestamp:"number - Unix timestamp"},broadcastIPC:!1,logToConsole:!0}),this.registerEvent("ShowAvatarImportDialog",{description:"Fired when avatar favorites import dialog is opened",payload:{timestamp:"number - Unix timestamp"},broadcastIPC:!1,logToConsole:!0}),this.registerEvent("ShowFriendImportDialog",{description:"Fired when friend import dialog is opened",payload:{timestamp:"number - Unix timestamp"},broadcastIPC:!1,logToConsole:!0}),this.registerEvent("ShowModerateGroupDialog",{description:"Fired when group moderation dialog is opened",payload:{userId:"string - User ID being moderated",dialog:"object - Full dialog reference",timestamp:"number - Unix timestamp"},broadcastIPC:!1,logToConsole:!0}),this.registerEvent("ShowGroupMemberModerationDialog",{description:"Fired when group member moderation dialog is opened",payload:{groupId:"string - Group ID",userId:"string - User ID (optional)",dialog:"object - Full dialog reference",timestamp:"number - Unix timestamp"},broadcastIPC:!1,logToConsole:!0}),this.registerEvent("ShowFullscreenImageDialog",{description:"Fired when fullscreen image viewer is opened",payload:{imageUrl:"string - Image URL",fileName:"string - File name",dialog:"object - Full dialog reference",timestamp:"number - Unix timestamp"},broadcastIPC:!1,logToConsole:!0}),this.registerEvent("ShowPreviousInstancesInfoDialog",{description:"Fired when previous instances info dialog is opened",payload:{instanceId:"string - Instance ID",timestamp:"number - Unix timestamp"},broadcastIPC:!1,logToConsole:!0}),this.registerEvent("ShowRegistryBackupDialog",{description:"Fired when registry backup dialog is opened",payload:{timestamp:"number - Unix timestamp"},broadcastIPC:!1,logToConsole:!0}),this.registerEvent("ShowVRCXUpdateDialog",{description:"Fired when VRCX update dialog is opened",payload:{dialog:"object - Full dialog reference",timestamp:"number - Unix timestamp"},broadcastIPC:!1,logToConsole:!0}),this.registerEvent("ShowChangeLogDialog",{description:"Fired when changelog dialog is opened",payload:{dialog:"object - Full dialog reference",timestamp:"number - Unix timestamp"},broadcastIPC:!1,logToConsole:!0}),this.registerEvent("ShowEditInviteMessageDialog",{description:"Fired when edit invite message dialog is opened",payload:{dialog:"object - Full dialog reference",timestamp:"number - Unix timestamp"},broadcastIPC:!1,logToConsole:!0}),this.registerEvent("ShowAvatarProviderDialog",{description:"Fired when avatar provider dialog is opened",payload:{timestamp:"number - Unix timestamp"},broadcastIPC:!1,logToConsole:!0}),this.logger.log("Dialog API ready"),this.loaded=!0}async start(){await this.setupDialogWrapper(),this.setupDialogHooks(),this.enabled=!0,this.started=!0,this.logger.log("Dialog API started")}setupDialogHooks(){this.subscribe("USER",({userDialog:e})=>{e?.visible&&e?.id&&this.emit("ShowUserDialog",{userId:e.id,dialog:e,timestamp:Date.now()})}),this.subscribe("WORLD",({worldDialog:e})=>{e?.visible&&e?.id&&this.emit("ShowWorldDialog",{worldId:e.id,shortName:e.$location?.shortName||"",dialog:e,timestamp:Date.now()})}),this.subscribe("AVATAR",({avatarDialog:e})=>{e?.visible&&e?.id&&this.emit("ShowAvatarDialog",{avatarId:e.id,dialog:e,timestamp:Date.now()})}),this.subscribe("GROUP",({groupDialog:e})=>{e?.visible&&e?.id&&this.emit("ShowGroupDialog",{groupId:e.id,dialog:e,timestamp:Date.now()})}),this.subscribe("LAUNCH",({launchDialogData:e})=>{e?.visible&&e?.tag&&this.emit("ShowLaunchDialog",{location:e.tag,shortName:e.shortName||"",dialog:e,timestamp:Date.now()})}),this.subscribe("GALLERY",e=>{e.galleryDialogVisible&&this.emit("ShowGalleryDialog",{dialog:e,timestamp:Date.now()})}),this.subscribe("FAVORITE",({favoriteDialog:e,worldImportDialogVisible:t,avatarImportDialogVisible:i,friendImportDialogVisible:o})=>{e?.visible&&this.emit("ShowFavoriteDialog",{type:e.type,objectId:e.objectId,dialog:e,timestamp:Date.now()}),t&&this.emit("ShowWorldImportDialog",{timestamp:Date.now()}),i&&this.emit("ShowAvatarImportDialog",{timestamp:Date.now()}),o&&this.emit("ShowFriendImportDialog",{timestamp:Date.now()})}),this.subscribe("GROUP",({moderateGroupDialog:e,groupMemberModeration:t})=>{e?.visible&&e?.userId&&this.emit("ShowModerateGroupDialog",{userId:e.userId,dialog:e,timestamp:Date.now()}),t?.visible&&t?.id&&this.emit("ShowGroupMemberModerationDialog",{groupId:t.id,userId:t.openWithUserId||"",dialog:t,timestamp:Date.now()})}),this.subscribe("GALLERY",({fullscreenImageDialog:e})=>{e?.visible&&this.emit("ShowFullscreenImageDialog",{imageUrl:e.imageUrl,fileName:e.fileName||"",dialog:e,timestamp:Date.now()})}),this.subscribe("INSTANCE",({previousInstancesInfoDialogVisible:e,previousInstancesInfoDialogInstanceId:t})=>{e&&t&&this.emit("ShowPreviousInstancesInfoDialog",{instanceId:t,timestamp:Date.now()})}),this.subscribe("VRCX",({isRegistryBackupDialogVisible:e})=>{e&&this.emit("ShowRegistryBackupDialog",{timestamp:Date.now()})}),this.subscribe("VRCXUPDATER",({VRCXUpdateDialog:e,changeLogDialog:t})=>{e?.visible&&this.emit("ShowVRCXUpdateDialog",{dialog:e,timestamp:Date.now()}),t?.visible&&this.emit("ShowChangeLogDialog",{dialog:t,timestamp:Date.now()})}),this.subscribe("INVITE",({editInviteMessageDialog:e})=>{e?.visible&&this.emit("ShowEditInviteMessageDialog",{dialog:e,timestamp:Date.now()})}),this.subscribe("AVATARPROVIDER",({isAvatarProviderDialogVisible:e})=>{e&&this.emit("ShowAvatarProviderDialog",{timestamp:Date.now()})}),this.logger.log("Dialog watchers registered via store subscriptions")}async stop(){this.logger.log("Stopping Dialog API"),this.closeAllDialogs(),this.dialogWrapperElement&&this.dialogWrapperElement.parentNode&&this.dialogWrapperElement.parentNode.removeChild(this.dialogWrapperElement),await super.stop()}async setupDialogWrapper(){return new Promise(e=>{const t=c(()=>{this.dialogWrapperElement=document.createElement("div"),this.dialogWrapperElement.id="customjs-dialog-wrapper",this.dialogWrapperElement.style.cssText="position: relative; z-index: 2000;",(document.querySelector("#app")||document.body).appendChild(this.dialogWrapperElement),this.logger.log("Dialog wrapper created"),e()},"createWrapper");document.readyState==="loading"?document.addEventListener("DOMContentLoaded",t):t()})}registerDialog(e,t){this.customDialogs.has(e)&&this.logger.warn(`Dialog ${e} already exists, overwriting`);const i={id:e,visible:!1,title:t.title||"Custom Dialog",width:t.width||"600px",content:t.content||"",showClose:t.showClose!==!1,closeOnClickModal:t.closeOnClickModal!==!1,closeOnPressEscape:t.closeOnPressEscape!==!1,fullscreen:t.fullscreen||!1,top:t.top||"15vh",modal:t.modal!==!1,draggable:t.draggable||!1,footer:t.footer,beforeClose:t.beforeClose,onOpen:t.onOpen,onClose:t.onClose};return this.customDialogs.set(e,i),this.logger.log(`Registered dialog: ${e}`),this.createDialogController(e)}createDialogController(e){return{show:()=>this.showDialog(e),hide:()=>this.closeDialog(e),toggle:()=>this.toggleDialog(e),setTitle:t=>this.setDialogTitle(e,t),setContent:t=>this.setDialogContent(e,t),isVisible:()=>this.isDialogVisible(e),destroy:()=>this.destroyDialog(e)}}async showConfirmDialogAsync(e,t,i="info",o="Confirm",s="Cancel"){try{const a=window.$app?.config?.globalProperties?.$confirm;if(a)try{return await a(t,e,{confirmButtonText:o,cancelButtonText:s,type:i}),!0}catch{return!1}this.logger.log("Using native confirm dialog (Element Plus not available)");const n=`${e}

${t}`;return confirm(n)}catch(a){this.logger.warn(`Error showing confirm dialog: ${a.message}`);const n=`${e}

${t}`;return confirm(n)}}showDialog(e){const t=this.customDialogs.get(e);if(!t)return this.logger.error(`Dialog ${e} not found`),!1;if(t.visible)return this.logger.warn(`Dialog ${e} is already visible`),!1;if(t.visible=!0,t.onOpen)try{t.onOpen()}catch(i){const o=i instanceof Error?i.message:String(i);this.logger.error(`Error in onOpen callback for ${e}: ${o}`)}return this.renderDialog(e),this.logger.log(`Showing dialog: ${e}`),!0}closeDialog(e){const t=this.customDialogs.get(e);if(!t)return this.logger.error(`Dialog ${e} not found`),!1;if(!t.visible)return!1;if(t.beforeClose)try{if(t.beforeClose()===!1)return!1}catch(o){const s=o instanceof Error?o.message:String(o);this.logger.error(`Error in beforeClose callback for ${e}: ${s}`)}t.visible=!1;const i=this.dialogContainers.get(e);if(i&&(i.style.display="none"),t.onClose)try{t.onClose()}catch(o){const s=o instanceof Error?o.message:String(o);this.logger.error(`Error in onClose callback for ${e}: ${s}`)}return this.logger.log(`Closed dialog: ${e}`),!0}toggleDialog(e){const t=this.customDialogs.get(e);if(!t){this.logger.error(`Dialog ${e} not found`);return}t.visible?this.closeDialog(e):this.showDialog(e)}setDialogTitle(e,t){const i=this.customDialogs.get(e);if(!i){this.logger.error(`Dialog ${e} not found`);return}if(i.title=t,i.visible){const o=this.dialogContainers.get(e);if(o){const s=o.querySelector(".dialog-title");s&&(s.textContent=t)}}}setDialogContent(e,t){const i=this.customDialogs.get(e);if(!i){this.logger.error(`Dialog ${e} not found`);return}if(i.content=t,i.visible){const o=this.dialogContainers.get(e);if(o){const s=o.querySelector(".dialog-body");s&&(typeof t=="string"?s.innerHTML=t:t instanceof HTMLElement&&(s.innerHTML="",s.appendChild(t)))}}}isDialogVisible(e){const t=this.customDialogs.get(e);return t?t.visible:!1}destroyDialog(e){this.closeDialog(e);const t=this.dialogContainers.get(e);t&&t.parentNode&&t.parentNode.removeChild(t),this.dialogContainers.delete(e),this.customDialogs.delete(e),this.logger.log(`Destroyed dialog: ${e}`)}renderDialog(e){const t=this.customDialogs.get(e);if(!t||!this.dialogWrapperElement)return;let i=this.dialogContainers.get(e);if(i||(i=document.createElement("div"),i.className="customjs-dialog-container",i.setAttribute("data-dialog-id",e),this.dialogWrapperElement.appendChild(i),this.dialogContainers.set(e,i)),i.innerHTML="",i.style.display=t.visible?"block":"none",t.modal){const r=document.createElement("div");r.className="el-overlay",r.style.cssText="z-index: 2000;";const d=document.createElement("div");d.className="el-overlay-dialog",t.closeOnClickModal&&this.registerListener(d,"click",()=>{this.closeDialog(e)}),r.appendChild(d),i.appendChild(r)}const o=document.createElement("div");o.className="el-dialog__wrapper",o.style.cssText=`
      position: fixed;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      overflow: auto;
      margin: 0;
      z-index: 2001;
      display: flex;
      align-items: ${t.fullscreen?"stretch":"center"};
      justify-content: center;
    `;const s=document.createElement("div");s.className="el-dialog x-dialog customjs-dialog",s.style.cssText=`
      position: relative;
      margin: ${t.fullscreen?"0":t.top+" auto 50px"};
      background: #2a2a2a;
      border-radius: 8px;
      box-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);
      box-sizing: border-box;
      width: ${t.fullscreen?"100%":t.width};
      height: ${t.fullscreen?"100%":"auto"};
      max-width: ${t.fullscreen?"100%":"calc(100% - 30px)"};
      ${t.draggable?"cursor: move;":""}
    `;const a=document.createElement("div");a.className="el-dialog__header",a.style.cssText=`
      padding: 15px 20px;
      padding-bottom: 10px;
      display: flex;
      justify-content: space-between;
      align-items: center;
      border-bottom: 1px solid #404040;
    `;const n=document.createElement("span");if(n.className="el-dialog__title dialog-title",n.style.cssText="color: #e8e8e8; font-size: 18px; font-weight: 600;",n.textContent=t.title,a.appendChild(n),t.showClose){const r=document.createElement("button");r.className="el-dialog__headerbtn",r.style.cssText=`
        position: absolute;
        top: 15px;
        right: 20px;
        padding: 0;
        background: transparent;
        border: none;
        outline: none;
        cursor: pointer;
        font-size: 16px;
        color: #909399;
      `,r.innerHTML='<i class="el-icon el-dialog__close"><svg viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg" style="width: 1em; height: 1em;"><path fill="currentColor" d="M764.288 214.592 512 466.88 259.712 214.592a31.936 31.936 0 0 0-45.12 45.12L466.752 512 214.528 764.224a31.936 31.936 0 1 0 45.12 45.184L512 557.184l252.288 252.288a31.936 31.936 0 0 0 45.12-45.12L557.12 512.064l252.288-252.352a31.936 31.936 0 1 0-45.12-45.184z"></path></svg></i>',this.registerListener(r,"click",()=>{this.closeDialog(e)}),a.appendChild(r)}s.appendChild(a);const l=document.createElement("div");if(l.className="el-dialog__body dialog-body",l.style.cssText="padding: 20px; color: #e8e8e8; font-size: 14px;",typeof t.content=="string"?l.innerHTML=t.content:t.content instanceof HTMLElement&&l.appendChild(t.content),s.appendChild(l),t.footer){const r=document.createElement("div");r.className="el-dialog__footer",r.style.cssText="padding: 10px 20px 15px; text-align: right; border-top: 1px solid #404040;",typeof t.footer=="string"?r.innerHTML=t.footer:t.footer instanceof HTMLElement&&r.appendChild(t.footer),s.appendChild(r)}if(t.draggable&&this.makeDraggable(s,a),t.closeOnPressEscape){const r=c(d=>{d.key==="Escape"&&t.visible&&this.closeDialog(e)},"escHandler");this.registerListener(document,"keydown",r)}o.appendChild(s),i.appendChild(o)}makeDraggable(e,t){let i=!1,o=0,s=0,a=0,n=0;const l=c(g=>{a=g.clientX-o,n=g.clientY-s,(g.target===t||t.contains(g.target))&&(i=!0)},"dragStart"),r=c(g=>{i&&(g.preventDefault(),o=g.clientX-a,s=g.clientY-n,e.style.transform=`translate(${o}px, ${s}px)`)},"drag"),d=c(()=>{i=!1},"dragEnd");this.registerListener(t,"mousedown",l),this.registerListener(document,"mousemove",r),this.registerListener(document,"mouseup",d)}closeAllDialogs(){for(const[e]of this.customDialogs)this.closeDialog(e)}getAllDialogIds(){return Array.from(this.customDialogs.keys())}getDialog(e){return this.customDialogs.get(e)}};c(p,"DialogApiPlugin");let m=p;window.customjs.__LAST_PLUGIN_CLASS__=m;})();
