(()=>{var w=Object.defineProperty;var u=(f,e)=>w(f,"name",{value:e,configurable:!0});const a=class a extends Plugin{constructor(){super({name:"\u{1F6AB} Self Invite on Blocked Player",description:"Automatically creates a self-invite to a new instance when a blocked player joins your current instance",authors:[{name:"Bluscream"}],build:"1760847330",tags:["Automation","Security"],dependencies:[]}),this.lastBlockedPlayerJoin=null,this.inviteCreated=!1}async load(){const e=window.customjs.SettingType;this.settings=this.defineSettings({delayMs:{type:e.NUMBER,description:"Delay before creating self-invite (milliseconds)",default:1e3},cooldownMs:{type:e.NUMBER,description:"Minimum time between self-invites (milliseconds)",default:3e4},showNotification:{type:e.BOOLEAN,description:"Show notification when creating self-invite",default:!0},showPlayerName:{type:e.BOOLEAN,description:"Include blocked player's name in notification (privacy consideration)",default:!1}}),this.logger.log(`\u2699\uFE0F Cooldown: ${this.settings.store.cooldownMs}ms`),this.logger.log("Self Invite on Blocked Player plugin ready"),this.loaded=!0}async start(){this.utils=window.customjs.utils,this.setupGameLogMonitoring(),this.enabled=!0,this.started=!0,this.logger.log("Self Invite on Blocked Player plugin started, monitoring for blocked players")}async onLogin(e){this.lastBlockedPlayerJoin=null,this.inviteCreated=!1,this.logger.log("State reset on login")}async stop(){this.logger.log("Stopping Self Invite on Blocked Player plugin"),await super.stop()}setupGameLogMonitoring(){this.subscribe("GAMELOG",({gameLogSessionTable:e})=>{if(e?.length>0){const t=e[e.length-1];t?.type==="OnPlayerJoined"&&this.handlePlayerJoin(t)}}),this.logger.log("GameLog store subscription registered")}async handlePlayerJoin(e){try{const t=e.userId||e.user_id,o=e.displayName||e.display_name;if(!t)return;const i=window.$pinia?.moderation;if(!i){this.logger.warn("Moderation store not available");return}const s=i.cachedPlayerModerations.get(t);if(!s||s.type!=="block")return;this.logger.log(`Blocked player joined: ${o} (${t})`);const n=Date.now(),c=this.settings.store.cooldownMs;if(this.lastBlockedPlayerJoin&&n-this.lastBlockedPlayerJoin<c){this.logger.log(`Cooldown active, skipping self-invite (${Math.round((c-(n-this.lastBlockedPlayerJoin))/1e3)}s remaining)`);return}const d=window.$pinia?.location;if(!d){this.logger.error("Location store not available");return}const r=d.lastLocation?.location;if(!r||r==="offline"||r==="traveling"){this.logger.log("Not in a valid location, skipping self-invite");return}const g=this.getWorldIdFromLocation(r);if(!g){this.logger.error("Could not extract worldId from location");return}const h=this.settings.store.delayMs;this.logger.log(`Creating self-invite to new instance in ${h}ms...`),setTimeout(()=>{this.createSelfInvite(g,o)},h),this.lastBlockedPlayerJoin=n}catch(t){this.logger.error(`Error handling player join: ${t.message}`)}}createSelfInvite(e,t){try{if(!window.$app?.newInstanceSelfInvite){this.logger.error("$app.newInstanceSelfInvite not available");return}const i=window.$pinia?.location?.lastLocation?.worldName||"this world";if(window.$app.newInstanceSelfInvite(e),this.logger.log(`\u2713 Self-invite created for world: ${e}`),this.settings.store.showNotification){const n=this.settings.store.showPlayerName?`Blocked player ${t} joined. Self-invite created to new instance of ${i}`:`Blocked player joined. Self-invite created to new instance of ${i}`;this.logger.showInfo(n)}this.inviteCreated=!0}catch(o){this.logger.error(`Failed to create self-invite: ${o.message}`)}}getWorldIdFromLocation(e){if(!e||typeof e!="string")return null;const t=e.match(/^(wrld_[a-f0-9-]+)/i);return t?t[1]:null}getCurrentWorldId(){const e=window.$pinia?.location;return e?.lastLocation?.location?this.getWorldIdFromLocation(e.lastLocation.location):null}isUserBlocked(e){const t=window.$pinia?.moderation;return t?t.cachedPlayerModerations.get(e)?.type==="block":!1}async triggerSelfInvite(e=null){const t=e||this.getCurrentWorldId();return t?(this.logger.log(`Manually triggering self-invite for world: ${t}`),this.createSelfInvite(t,"Manual trigger"),!0):(this.logger.error("No world ID provided and could not get current world"),!1)}getStats(){return{lastBlockedPlayerJoin:this.lastBlockedPlayerJoin,inviteCreated:this.inviteCreated,cooldown:this.settings.store.cooldownMs}}resetCooldown(){this.lastBlockedPlayerJoin=null,this.logger.log("Cooldown reset")}};u(a,"SelfInviteOnBlockedPlayerPlugin");let l=a;window.customjs.__LAST_PLUGIN_CLASS__=l;})();
