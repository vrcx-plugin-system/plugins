(()=>{var p=Object.defineProperty;var h=(v,e)=>p(v,"name",{value:e,configurable:!0});const f=class f extends CustomModule{constructor(){super({name:"Navigation Menu API \u{1F9ED}",description:"API for adding custom navigation menu items to VRCX",authors:[{name:"Bluscream",description:"VRCX Plugin System Maintainer",userId:"usr_08082729-592d-4098-9a21-83c8dd37a844"}],tags:["API","Core","Navigation","Library"],required_dependencies:[]}),this.customItems=new Map,this.contentContainers=new Map,this.navMenu=null,this.contentParent=null,this.currentActiveIndex=null}async load(){this.logger.log("Navigation Menu API ready"),this.loaded=!0}async start(){await this.waitForNavMenu(),await this.setupContentArea(),this.setupObserver(),this.renderAllItems(),this.enabled=!0,this.started=!0,this.logger.log("Navigation Menu API started")}async onLogin(e){this.logger.log(`Setting up menu watcher for user: ${e?.displayName}`),this.watchMenuChanges()}async stop(){this.logger.log("Stopping Navigation Menu API"),this.clearAllItems(),await super.stop()}async waitForNavMenu(){return new Promise(e=>{let n=0;const t=50,o=h(()=>{this.navMenu=document.querySelector(".el-menu"),this.navMenu?this.navMenu.querySelectorAll(".el-menu-item").length>0?(this.logger.log("Navigation menu found with items"),e()):n<t?(n++,setTimeout(o,100)):(this.logger.log("Navigation menu found (no items yet, proceeding anyway)"),e()):setTimeout(o,500)},"checkNav");setTimeout(o,1e3)})}async setupContentArea(){return new Promise(e=>{const n=h(()=>{this.contentParent=document.querySelector(".el-splitter"),this.contentParent?(this.logger.log("Content area found, ready to add tab content"),e()):setTimeout(n,500)},"findContentArea");setTimeout(n,1e3)})}setupObserver(){const e=new MutationObserver(()=>{this.navMenu&&!document.contains(this.navMenu)&&(this.navMenu=null,this.waitForNavMenu().then(()=>this.renderAllItems()))});this.registerObserver(e),e.observe(document.body,{childList:!0,subtree:!0}),this.logger.log("Mutation observer setup complete")}watchMenuChanges(){this.subscribe("UI",n=>{const t=n?.menuActiveIndex||window.$pinia?.ui?.menuActiveIndex;t&&this.updateContentVisibility(t)});const e=window.$pinia?.ui?.menuActiveIndex;e&&this.updateContentVisibility(e),this.logger.log("Menu watcher setup complete")}updateContentVisibility(e){const n=this.currentActiveIndex;this.currentActiveIndex=e,this.customItems.has(e)&&this.contentParent&&this.contentParent.querySelectorAll(".x-container").forEach(s=>{(!s.id||!s.id.startsWith("custom-nav-content-"))&&(s.style.display="none")}),this.contentContainers.forEach((o,s)=>{const l=e===s,d=n===s;if(o.style.display=l?"block":"none",l&&!d){const a=this.customItems.get(s);if(a?.onShow)try{a.onShow()}catch(i){const r=i instanceof Error?i.message:String(i);this.logger.error(`Error in onShow callback for ${s}: ${r}`)}}else if(!l&&d){const a=this.customItems.get(s);if(a?.onHide)try{a.onHide()}catch(i){const r=i instanceof Error?i.message:String(i);this.logger.error(`Error in onHide callback for ${s}: ${r}`)}}}),this.customItems.forEach((o,s)=>{const l=this.navMenu?.querySelector(`[data-custom-nav-item="${s}"]`);l&&(e===s?l.classList.add("is-active"):l.classList.remove("is-active"))})}addItem(e,n){const t={id:e,label:n.label||e,icon:n.icon||"ri-plugin-line",onClick:n.onClick||null,content:n.content||null,onShow:n.onShow||null,onHide:n.onHide||null,position:n.position!==void 0?n.position:null,before:n.before||null,after:n.after||null,enabled:n.enabled!==!1};return this.customItems.set(e,t),this.logger.log(`Added item: ${e}`),this.navMenu&&this.renderItem(t),t.content&&this.contentParent?this.createContentContainer(e,t.content):t.content&&!this.contentParent&&setTimeout(()=>{this.contentParent&&this.createContentContainer(e,t.content)},2e3),t}createContentContainer(e,n){if(!this.contentParent){this.logger.warn(`Content parent not ready for ${e}`);return}const t=document.createElement("div");if(t.id=`custom-nav-content-${e}`,t.className="x-container",t.style.cssText=`
      display: none;
      padding: 20px;
      height: 100%;
      overflow-y: auto;
    `,typeof n=="function"){const s=n();s instanceof HTMLElement?t.appendChild(s):typeof s=="string"&&(t.innerHTML=s)}else n instanceof HTMLElement?t.appendChild(n):typeof n=="string"&&(t.innerHTML=n);const o=this.contentParent.querySelector(".el-splitter-panel");o&&(o.appendChild(t),this.contentContainers.set(e,t),this.logger.log(`Created content container for: ${e}`))}removeItem(e){if(!this.customItems.has(e))return this.logger.warn(`Item not found: ${e}`),!1;this.customItems.delete(e);const n=this.navMenu?.querySelector(`[data-custom-nav-item="${e}"]`);n&&n.remove();const t=this.contentContainers.get(e);return t&&(t.remove(),this.contentContainers.delete(e)),this.logger.log(`Removed item: ${e}`),!0}updateItem(e,n){const t=this.customItems.get(e);if(!t)return this.logger.warn(`Item not found: ${e}`),!1;Object.assign(t,n);const o=this.navMenu?.querySelector(`[data-custom-nav-item="${e}"]`);return o&&(o.remove(),this.renderItem(t)),this.logger.log(`Updated item: ${e}`),!0}hasItem(e){return this.customItems.has(e)}getAllItems(){return Array.from(this.customItems.values())}clearAllItems(){const e=Array.from(this.customItems.keys());e.forEach(n=>this.removeItem(n)),this.logger.log(`Cleared all ${e.length} custom items`)}renderItem(e){if(!this.navMenu||!e.enabled||this.navMenu.querySelector(`[data-custom-nav-item="${e.id}"]`))return;if(e.position!==null||e.before||e.after){const i=this.navMenu.querySelectorAll(".el-menu-item");if(Array.from(i).filter(u=>!u.hasAttribute("data-custom-nav-item")).length===0)if(e._retryCount||(e._retryCount=0),e._retryCount<50){e._retryCount++,setTimeout(()=>this.renderItem(e),100);return}else this.logger.log(`Timed out waiting for VRCX items, appending ${e.id} to end`)}const t=document.createElement("li");t.className="el-menu-item",t.setAttribute("data-custom-nav-item",e.id),t.setAttribute("role","menuitem"),t.setAttribute("tabindex","-1");const o=document.createElement("i");o.className=e.icon,o.style.fontSize="19px",o.style.width="24px",o.style.height="24px",o.style.display="inline-flex",o.style.alignItems="center",o.style.justifyContent="center";const s=document.createElement("span");s.className="el-tooltip__trigger",s.textContent=e.label,s.style.display="none",t.appendChild(o),t.appendChild(s);const l=h(i=>{if(i.preventDefault(),i.stopPropagation(),this.logger.log(`Nav item clicked: "${e.id}" (label: "${e.label}", hasContent: ${!!e.content})`),e.content){this.navMenu?.querySelectorAll(".el-menu-item")?.forEach(c=>{c.classList.remove("is-active")}),t.classList.add("is-active"),this.contentParent&&this.contentParent.querySelectorAll(".x-container").forEach(m=>{(!m.id||!m.id.startsWith("custom-nav-content-"))&&(m.style.display="none")}),this.contentContainers.forEach(c=>{c.style.display="none"});const u=this.contentContainers.get(e.id);if(u){if(u.style.display="block",e.onShow)try{e.onShow()}catch(c){const m=c instanceof Error?c.message:String(c);this.logger.error(`Error in onShow callback for ${e.id}: ${m}`)}}else this.logger.warn(`Content container not found for ${e.id}`);window.$pinia?.ui&&(window.$pinia.ui.menuActiveIndex=e.id)}else t.classList.add("is-active"),setTimeout(()=>{t.classList.remove("is-active")},200);e.onClick&&e.onClick()},"clickHandler");this.registerListener(t,"click",l);const d=h(()=>{t.setAttribute("title",e.label)},"hoverHandler");this.registerListener(t,"mouseenter",d);let a=null;if(e.position!==null){const i=this.navMenu.querySelectorAll(".el-menu-item");if(e.position>=0&&e.position<i.length)a=i[e.position];else if(e.position<0){const r=i.length+e.position;r>=0&&(a=i[r])}}else if(e.before){const i=this.navMenu.querySelectorAll(".el-menu-item");for(const r of Array.from(i))if(r.getAttribute("index")===e.before){a=r;break}}else if(e.after){const i=this.navMenu.querySelectorAll(".el-menu-item");for(const r of Array.from(i))if(r.getAttribute("index")===e.after){a=r.nextSibling;break}}a?this.navMenu.insertBefore(t,a):this.navMenu.appendChild(t),this.logger.log(`Rendered item: ${e.id}`)}renderAllItems(){this.customItems.forEach(e=>{this.renderItem(e),e.content&&this.contentParent&&!this.contentContainers.has(e.id)&&this.createContentContainer(e.id,e.content)})}};h(f,"NavMenuApiPlugin");let g=f;window.customjs.__LAST_PLUGIN_CLASS__=g;})();
